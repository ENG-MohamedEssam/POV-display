
POV_Display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  00001c06  00001c9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000038  00800170  00800170  00001daa  2**0
                  ALLOC
  3 .stab         00000e94  00000000  00000000  00001dac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000b6e  00000000  00000000  00002c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  000037ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001af  00000000  00000000  0000390e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000020aa  00000000  00000000  00003abd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000011aa  00000000  00000000  00005b67  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001026  00000000  00000000  00006d11  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00007d38  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002df  00000000  00000000  00007eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008bc  00000000  00000000  00008197  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008a53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 39 07 	jmp	0xe72	; 0xe72 <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 b9 07 	jmp	0xf72	; 0xf72 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e0       	ldi	r30, 0x06	; 6
      68:	fc e1       	ldi	r31, 0x1C	; 28
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e7       	ldi	r26, 0x70	; 112
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 3a       	cpi	r26, 0xA8	; 168
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a5 08 	call	0x114a	; 0x114a <main>
      8a:	0c 94 01 0e 	jmp	0x1c02	; 0x1c02 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_fpadd_parts>:
      92:	a0 e0       	ldi	r26, 0x00	; 0
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 ca 0d 	jmp	0x1b94	; 0x1b94 <__prologue_saves__>
      9e:	dc 01       	movw	r26, r24
      a0:	2b 01       	movw	r4, r22
      a2:	fa 01       	movw	r30, r20
      a4:	9c 91       	ld	r25, X
      a6:	92 30       	cpi	r25, 0x02	; 2
      a8:	08 f4       	brcc	.+2      	; 0xac <_fpadd_parts+0x1a>
      aa:	39 c1       	rjmp	.+626    	; 0x31e <_fpadd_parts+0x28c>
      ac:	eb 01       	movw	r28, r22
      ae:	88 81       	ld	r24, Y
      b0:	82 30       	cpi	r24, 0x02	; 2
      b2:	08 f4       	brcc	.+2      	; 0xb6 <_fpadd_parts+0x24>
      b4:	33 c1       	rjmp	.+614    	; 0x31c <_fpadd_parts+0x28a>
      b6:	94 30       	cpi	r25, 0x04	; 4
      b8:	69 f4       	brne	.+26     	; 0xd4 <_fpadd_parts+0x42>
      ba:	84 30       	cpi	r24, 0x04	; 4
      bc:	09 f0       	breq	.+2      	; 0xc0 <_fpadd_parts+0x2e>
      be:	2f c1       	rjmp	.+606    	; 0x31e <_fpadd_parts+0x28c>
      c0:	11 96       	adiw	r26, 0x01	; 1
      c2:	9c 91       	ld	r25, X
      c4:	11 97       	sbiw	r26, 0x01	; 1
      c6:	89 81       	ldd	r24, Y+1	; 0x01
      c8:	98 17       	cp	r25, r24
      ca:	09 f4       	brne	.+2      	; 0xce <_fpadd_parts+0x3c>
      cc:	28 c1       	rjmp	.+592    	; 0x31e <_fpadd_parts+0x28c>
      ce:	a0 e6       	ldi	r26, 0x60	; 96
      d0:	b0 e0       	ldi	r27, 0x00	; 0
      d2:	25 c1       	rjmp	.+586    	; 0x31e <_fpadd_parts+0x28c>
      d4:	84 30       	cpi	r24, 0x04	; 4
      d6:	09 f4       	brne	.+2      	; 0xda <_fpadd_parts+0x48>
      d8:	21 c1       	rjmp	.+578    	; 0x31c <_fpadd_parts+0x28a>
      da:	82 30       	cpi	r24, 0x02	; 2
      dc:	a9 f4       	brne	.+42     	; 0x108 <_fpadd_parts+0x76>
      de:	92 30       	cpi	r25, 0x02	; 2
      e0:	09 f0       	breq	.+2      	; 0xe4 <_fpadd_parts+0x52>
      e2:	1d c1       	rjmp	.+570    	; 0x31e <_fpadd_parts+0x28c>
      e4:	9a 01       	movw	r18, r20
      e6:	ad 01       	movw	r20, r26
      e8:	88 e0       	ldi	r24, 0x08	; 8
      ea:	ea 01       	movw	r28, r20
      ec:	09 90       	ld	r0, Y+
      ee:	ae 01       	movw	r20, r28
      f0:	e9 01       	movw	r28, r18
      f2:	09 92       	st	Y+, r0
      f4:	9e 01       	movw	r18, r28
      f6:	81 50       	subi	r24, 0x01	; 1
      f8:	c1 f7       	brne	.-16     	; 0xea <_fpadd_parts+0x58>
      fa:	e2 01       	movw	r28, r4
      fc:	89 81       	ldd	r24, Y+1	; 0x01
      fe:	11 96       	adiw	r26, 0x01	; 1
     100:	9c 91       	ld	r25, X
     102:	89 23       	and	r24, r25
     104:	81 83       	std	Z+1, r24	; 0x01
     106:	08 c1       	rjmp	.+528    	; 0x318 <_fpadd_parts+0x286>
     108:	92 30       	cpi	r25, 0x02	; 2
     10a:	09 f4       	brne	.+2      	; 0x10e <_fpadd_parts+0x7c>
     10c:	07 c1       	rjmp	.+526    	; 0x31c <_fpadd_parts+0x28a>
     10e:	12 96       	adiw	r26, 0x02	; 2
     110:	2d 90       	ld	r2, X+
     112:	3c 90       	ld	r3, X
     114:	13 97       	sbiw	r26, 0x03	; 3
     116:	eb 01       	movw	r28, r22
     118:	8a 81       	ldd	r24, Y+2	; 0x02
     11a:	9b 81       	ldd	r25, Y+3	; 0x03
     11c:	14 96       	adiw	r26, 0x04	; 4
     11e:	ad 90       	ld	r10, X+
     120:	bd 90       	ld	r11, X+
     122:	cd 90       	ld	r12, X+
     124:	dc 90       	ld	r13, X
     126:	17 97       	sbiw	r26, 0x07	; 7
     128:	ec 80       	ldd	r14, Y+4	; 0x04
     12a:	fd 80       	ldd	r15, Y+5	; 0x05
     12c:	0e 81       	ldd	r16, Y+6	; 0x06
     12e:	1f 81       	ldd	r17, Y+7	; 0x07
     130:	91 01       	movw	r18, r2
     132:	28 1b       	sub	r18, r24
     134:	39 0b       	sbc	r19, r25
     136:	b9 01       	movw	r22, r18
     138:	37 ff       	sbrs	r19, 7
     13a:	04 c0       	rjmp	.+8      	; 0x144 <_fpadd_parts+0xb2>
     13c:	66 27       	eor	r22, r22
     13e:	77 27       	eor	r23, r23
     140:	62 1b       	sub	r22, r18
     142:	73 0b       	sbc	r23, r19
     144:	60 32       	cpi	r22, 0x20	; 32
     146:	71 05       	cpc	r23, r1
     148:	0c f0       	brlt	.+2      	; 0x14c <_fpadd_parts+0xba>
     14a:	61 c0       	rjmp	.+194    	; 0x20e <_fpadd_parts+0x17c>
     14c:	12 16       	cp	r1, r18
     14e:	13 06       	cpc	r1, r19
     150:	6c f5       	brge	.+90     	; 0x1ac <_fpadd_parts+0x11a>
     152:	37 01       	movw	r6, r14
     154:	48 01       	movw	r8, r16
     156:	06 2e       	mov	r0, r22
     158:	04 c0       	rjmp	.+8      	; 0x162 <_fpadd_parts+0xd0>
     15a:	96 94       	lsr	r9
     15c:	87 94       	ror	r8
     15e:	77 94       	ror	r7
     160:	67 94       	ror	r6
     162:	0a 94       	dec	r0
     164:	d2 f7       	brpl	.-12     	; 0x15a <_fpadd_parts+0xc8>
     166:	21 e0       	ldi	r18, 0x01	; 1
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	40 e0       	ldi	r20, 0x00	; 0
     16c:	50 e0       	ldi	r21, 0x00	; 0
     16e:	04 c0       	rjmp	.+8      	; 0x178 <_fpadd_parts+0xe6>
     170:	22 0f       	add	r18, r18
     172:	33 1f       	adc	r19, r19
     174:	44 1f       	adc	r20, r20
     176:	55 1f       	adc	r21, r21
     178:	6a 95       	dec	r22
     17a:	d2 f7       	brpl	.-12     	; 0x170 <_fpadd_parts+0xde>
     17c:	21 50       	subi	r18, 0x01	; 1
     17e:	30 40       	sbci	r19, 0x00	; 0
     180:	40 40       	sbci	r20, 0x00	; 0
     182:	50 40       	sbci	r21, 0x00	; 0
     184:	2e 21       	and	r18, r14
     186:	3f 21       	and	r19, r15
     188:	40 23       	and	r20, r16
     18a:	51 23       	and	r21, r17
     18c:	21 15       	cp	r18, r1
     18e:	31 05       	cpc	r19, r1
     190:	41 05       	cpc	r20, r1
     192:	51 05       	cpc	r21, r1
     194:	21 f0       	breq	.+8      	; 0x19e <_fpadd_parts+0x10c>
     196:	21 e0       	ldi	r18, 0x01	; 1
     198:	30 e0       	ldi	r19, 0x00	; 0
     19a:	40 e0       	ldi	r20, 0x00	; 0
     19c:	50 e0       	ldi	r21, 0x00	; 0
     19e:	79 01       	movw	r14, r18
     1a0:	8a 01       	movw	r16, r20
     1a2:	e6 28       	or	r14, r6
     1a4:	f7 28       	or	r15, r7
     1a6:	08 29       	or	r16, r8
     1a8:	19 29       	or	r17, r9
     1aa:	3c c0       	rjmp	.+120    	; 0x224 <_fpadd_parts+0x192>
     1ac:	23 2b       	or	r18, r19
     1ae:	d1 f1       	breq	.+116    	; 0x224 <_fpadd_parts+0x192>
     1b0:	26 0e       	add	r2, r22
     1b2:	37 1e       	adc	r3, r23
     1b4:	35 01       	movw	r6, r10
     1b6:	46 01       	movw	r8, r12
     1b8:	06 2e       	mov	r0, r22
     1ba:	04 c0       	rjmp	.+8      	; 0x1c4 <_fpadd_parts+0x132>
     1bc:	96 94       	lsr	r9
     1be:	87 94       	ror	r8
     1c0:	77 94       	ror	r7
     1c2:	67 94       	ror	r6
     1c4:	0a 94       	dec	r0
     1c6:	d2 f7       	brpl	.-12     	; 0x1bc <_fpadd_parts+0x12a>
     1c8:	21 e0       	ldi	r18, 0x01	; 1
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	40 e0       	ldi	r20, 0x00	; 0
     1ce:	50 e0       	ldi	r21, 0x00	; 0
     1d0:	04 c0       	rjmp	.+8      	; 0x1da <_fpadd_parts+0x148>
     1d2:	22 0f       	add	r18, r18
     1d4:	33 1f       	adc	r19, r19
     1d6:	44 1f       	adc	r20, r20
     1d8:	55 1f       	adc	r21, r21
     1da:	6a 95       	dec	r22
     1dc:	d2 f7       	brpl	.-12     	; 0x1d2 <_fpadd_parts+0x140>
     1de:	21 50       	subi	r18, 0x01	; 1
     1e0:	30 40       	sbci	r19, 0x00	; 0
     1e2:	40 40       	sbci	r20, 0x00	; 0
     1e4:	50 40       	sbci	r21, 0x00	; 0
     1e6:	2a 21       	and	r18, r10
     1e8:	3b 21       	and	r19, r11
     1ea:	4c 21       	and	r20, r12
     1ec:	5d 21       	and	r21, r13
     1ee:	21 15       	cp	r18, r1
     1f0:	31 05       	cpc	r19, r1
     1f2:	41 05       	cpc	r20, r1
     1f4:	51 05       	cpc	r21, r1
     1f6:	21 f0       	breq	.+8      	; 0x200 <_fpadd_parts+0x16e>
     1f8:	21 e0       	ldi	r18, 0x01	; 1
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	40 e0       	ldi	r20, 0x00	; 0
     1fe:	50 e0       	ldi	r21, 0x00	; 0
     200:	59 01       	movw	r10, r18
     202:	6a 01       	movw	r12, r20
     204:	a6 28       	or	r10, r6
     206:	b7 28       	or	r11, r7
     208:	c8 28       	or	r12, r8
     20a:	d9 28       	or	r13, r9
     20c:	0b c0       	rjmp	.+22     	; 0x224 <_fpadd_parts+0x192>
     20e:	82 15       	cp	r24, r2
     210:	93 05       	cpc	r25, r3
     212:	2c f0       	brlt	.+10     	; 0x21e <_fpadd_parts+0x18c>
     214:	1c 01       	movw	r2, r24
     216:	aa 24       	eor	r10, r10
     218:	bb 24       	eor	r11, r11
     21a:	65 01       	movw	r12, r10
     21c:	03 c0       	rjmp	.+6      	; 0x224 <_fpadd_parts+0x192>
     21e:	ee 24       	eor	r14, r14
     220:	ff 24       	eor	r15, r15
     222:	87 01       	movw	r16, r14
     224:	11 96       	adiw	r26, 0x01	; 1
     226:	9c 91       	ld	r25, X
     228:	d2 01       	movw	r26, r4
     22a:	11 96       	adiw	r26, 0x01	; 1
     22c:	8c 91       	ld	r24, X
     22e:	98 17       	cp	r25, r24
     230:	09 f4       	brne	.+2      	; 0x234 <_fpadd_parts+0x1a2>
     232:	45 c0       	rjmp	.+138    	; 0x2be <_fpadd_parts+0x22c>
     234:	99 23       	and	r25, r25
     236:	39 f0       	breq	.+14     	; 0x246 <_fpadd_parts+0x1b4>
     238:	a8 01       	movw	r20, r16
     23a:	97 01       	movw	r18, r14
     23c:	2a 19       	sub	r18, r10
     23e:	3b 09       	sbc	r19, r11
     240:	4c 09       	sbc	r20, r12
     242:	5d 09       	sbc	r21, r13
     244:	06 c0       	rjmp	.+12     	; 0x252 <_fpadd_parts+0x1c0>
     246:	a6 01       	movw	r20, r12
     248:	95 01       	movw	r18, r10
     24a:	2e 19       	sub	r18, r14
     24c:	3f 09       	sbc	r19, r15
     24e:	40 0b       	sbc	r20, r16
     250:	51 0b       	sbc	r21, r17
     252:	57 fd       	sbrc	r21, 7
     254:	08 c0       	rjmp	.+16     	; 0x266 <_fpadd_parts+0x1d4>
     256:	11 82       	std	Z+1, r1	; 0x01
     258:	33 82       	std	Z+3, r3	; 0x03
     25a:	22 82       	std	Z+2, r2	; 0x02
     25c:	24 83       	std	Z+4, r18	; 0x04
     25e:	35 83       	std	Z+5, r19	; 0x05
     260:	46 83       	std	Z+6, r20	; 0x06
     262:	57 83       	std	Z+7, r21	; 0x07
     264:	1d c0       	rjmp	.+58     	; 0x2a0 <_fpadd_parts+0x20e>
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	81 83       	std	Z+1, r24	; 0x01
     26a:	33 82       	std	Z+3, r3	; 0x03
     26c:	22 82       	std	Z+2, r2	; 0x02
     26e:	88 27       	eor	r24, r24
     270:	99 27       	eor	r25, r25
     272:	dc 01       	movw	r26, r24
     274:	82 1b       	sub	r24, r18
     276:	93 0b       	sbc	r25, r19
     278:	a4 0b       	sbc	r26, r20
     27a:	b5 0b       	sbc	r27, r21
     27c:	84 83       	std	Z+4, r24	; 0x04
     27e:	95 83       	std	Z+5, r25	; 0x05
     280:	a6 83       	std	Z+6, r26	; 0x06
     282:	b7 83       	std	Z+7, r27	; 0x07
     284:	0d c0       	rjmp	.+26     	; 0x2a0 <_fpadd_parts+0x20e>
     286:	22 0f       	add	r18, r18
     288:	33 1f       	adc	r19, r19
     28a:	44 1f       	adc	r20, r20
     28c:	55 1f       	adc	r21, r21
     28e:	24 83       	std	Z+4, r18	; 0x04
     290:	35 83       	std	Z+5, r19	; 0x05
     292:	46 83       	std	Z+6, r20	; 0x06
     294:	57 83       	std	Z+7, r21	; 0x07
     296:	82 81       	ldd	r24, Z+2	; 0x02
     298:	93 81       	ldd	r25, Z+3	; 0x03
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	93 83       	std	Z+3, r25	; 0x03
     29e:	82 83       	std	Z+2, r24	; 0x02
     2a0:	24 81       	ldd	r18, Z+4	; 0x04
     2a2:	35 81       	ldd	r19, Z+5	; 0x05
     2a4:	46 81       	ldd	r20, Z+6	; 0x06
     2a6:	57 81       	ldd	r21, Z+7	; 0x07
     2a8:	da 01       	movw	r26, r20
     2aa:	c9 01       	movw	r24, r18
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	a1 09       	sbc	r26, r1
     2b0:	b1 09       	sbc	r27, r1
     2b2:	8f 5f       	subi	r24, 0xFF	; 255
     2b4:	9f 4f       	sbci	r25, 0xFF	; 255
     2b6:	af 4f       	sbci	r26, 0xFF	; 255
     2b8:	bf 43       	sbci	r27, 0x3F	; 63
     2ba:	28 f3       	brcs	.-54     	; 0x286 <_fpadd_parts+0x1f4>
     2bc:	0b c0       	rjmp	.+22     	; 0x2d4 <_fpadd_parts+0x242>
     2be:	91 83       	std	Z+1, r25	; 0x01
     2c0:	33 82       	std	Z+3, r3	; 0x03
     2c2:	22 82       	std	Z+2, r2	; 0x02
     2c4:	ea 0c       	add	r14, r10
     2c6:	fb 1c       	adc	r15, r11
     2c8:	0c 1d       	adc	r16, r12
     2ca:	1d 1d       	adc	r17, r13
     2cc:	e4 82       	std	Z+4, r14	; 0x04
     2ce:	f5 82       	std	Z+5, r15	; 0x05
     2d0:	06 83       	std	Z+6, r16	; 0x06
     2d2:	17 83       	std	Z+7, r17	; 0x07
     2d4:	83 e0       	ldi	r24, 0x03	; 3
     2d6:	80 83       	st	Z, r24
     2d8:	24 81       	ldd	r18, Z+4	; 0x04
     2da:	35 81       	ldd	r19, Z+5	; 0x05
     2dc:	46 81       	ldd	r20, Z+6	; 0x06
     2de:	57 81       	ldd	r21, Z+7	; 0x07
     2e0:	57 ff       	sbrs	r21, 7
     2e2:	1a c0       	rjmp	.+52     	; 0x318 <_fpadd_parts+0x286>
     2e4:	c9 01       	movw	r24, r18
     2e6:	aa 27       	eor	r26, r26
     2e8:	97 fd       	sbrc	r25, 7
     2ea:	a0 95       	com	r26
     2ec:	ba 2f       	mov	r27, r26
     2ee:	81 70       	andi	r24, 0x01	; 1
     2f0:	90 70       	andi	r25, 0x00	; 0
     2f2:	a0 70       	andi	r26, 0x00	; 0
     2f4:	b0 70       	andi	r27, 0x00	; 0
     2f6:	56 95       	lsr	r21
     2f8:	47 95       	ror	r20
     2fa:	37 95       	ror	r19
     2fc:	27 95       	ror	r18
     2fe:	82 2b       	or	r24, r18
     300:	93 2b       	or	r25, r19
     302:	a4 2b       	or	r26, r20
     304:	b5 2b       	or	r27, r21
     306:	84 83       	std	Z+4, r24	; 0x04
     308:	95 83       	std	Z+5, r25	; 0x05
     30a:	a6 83       	std	Z+6, r26	; 0x06
     30c:	b7 83       	std	Z+7, r27	; 0x07
     30e:	82 81       	ldd	r24, Z+2	; 0x02
     310:	93 81       	ldd	r25, Z+3	; 0x03
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	93 83       	std	Z+3, r25	; 0x03
     316:	82 83       	std	Z+2, r24	; 0x02
     318:	df 01       	movw	r26, r30
     31a:	01 c0       	rjmp	.+2      	; 0x31e <_fpadd_parts+0x28c>
     31c:	d2 01       	movw	r26, r4
     31e:	cd 01       	movw	r24, r26
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	e2 e1       	ldi	r30, 0x12	; 18
     326:	0c 94 e6 0d 	jmp	0x1bcc	; 0x1bcc <__epilogue_restores__>

0000032a <__subsf3>:
     32a:	a0 e2       	ldi	r26, 0x20	; 32
     32c:	b0 e0       	ldi	r27, 0x00	; 0
     32e:	eb e9       	ldi	r30, 0x9B	; 155
     330:	f1 e0       	ldi	r31, 0x01	; 1
     332:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__prologue_saves__+0x18>
     336:	69 83       	std	Y+1, r22	; 0x01
     338:	7a 83       	std	Y+2, r23	; 0x02
     33a:	8b 83       	std	Y+3, r24	; 0x03
     33c:	9c 83       	std	Y+4, r25	; 0x04
     33e:	2d 83       	std	Y+5, r18	; 0x05
     340:	3e 83       	std	Y+6, r19	; 0x06
     342:	4f 83       	std	Y+7, r20	; 0x07
     344:	58 87       	std	Y+8, r21	; 0x08
     346:	e9 e0       	ldi	r30, 0x09	; 9
     348:	ee 2e       	mov	r14, r30
     34a:	f1 2c       	mov	r15, r1
     34c:	ec 0e       	add	r14, r28
     34e:	fd 1e       	adc	r15, r29
     350:	ce 01       	movw	r24, r28
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	b7 01       	movw	r22, r14
     356:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     35a:	8e 01       	movw	r16, r28
     35c:	0f 5e       	subi	r16, 0xEF	; 239
     35e:	1f 4f       	sbci	r17, 0xFF	; 255
     360:	ce 01       	movw	r24, r28
     362:	05 96       	adiw	r24, 0x05	; 5
     364:	b8 01       	movw	r22, r16
     366:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     36a:	8a 89       	ldd	r24, Y+18	; 0x12
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	89 27       	eor	r24, r25
     370:	8a 8b       	std	Y+18, r24	; 0x12
     372:	c7 01       	movw	r24, r14
     374:	b8 01       	movw	r22, r16
     376:	ae 01       	movw	r20, r28
     378:	47 5e       	subi	r20, 0xE7	; 231
     37a:	5f 4f       	sbci	r21, 0xFF	; 255
     37c:	0e 94 49 00 	call	0x92	; 0x92 <_fpadd_parts>
     380:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__pack_f>
     384:	a0 96       	adiw	r28, 0x20	; 32
     386:	e6 e0       	ldi	r30, 0x06	; 6
     388:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__epilogue_restores__+0x18>

0000038c <__addsf3>:
     38c:	a0 e2       	ldi	r26, 0x20	; 32
     38e:	b0 e0       	ldi	r27, 0x00	; 0
     390:	ec ec       	ldi	r30, 0xCC	; 204
     392:	f1 e0       	ldi	r31, 0x01	; 1
     394:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__prologue_saves__+0x18>
     398:	69 83       	std	Y+1, r22	; 0x01
     39a:	7a 83       	std	Y+2, r23	; 0x02
     39c:	8b 83       	std	Y+3, r24	; 0x03
     39e:	9c 83       	std	Y+4, r25	; 0x04
     3a0:	2d 83       	std	Y+5, r18	; 0x05
     3a2:	3e 83       	std	Y+6, r19	; 0x06
     3a4:	4f 83       	std	Y+7, r20	; 0x07
     3a6:	58 87       	std	Y+8, r21	; 0x08
     3a8:	f9 e0       	ldi	r31, 0x09	; 9
     3aa:	ef 2e       	mov	r14, r31
     3ac:	f1 2c       	mov	r15, r1
     3ae:	ec 0e       	add	r14, r28
     3b0:	fd 1e       	adc	r15, r29
     3b2:	ce 01       	movw	r24, r28
     3b4:	01 96       	adiw	r24, 0x01	; 1
     3b6:	b7 01       	movw	r22, r14
     3b8:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     3bc:	8e 01       	movw	r16, r28
     3be:	0f 5e       	subi	r16, 0xEF	; 239
     3c0:	1f 4f       	sbci	r17, 0xFF	; 255
     3c2:	ce 01       	movw	r24, r28
     3c4:	05 96       	adiw	r24, 0x05	; 5
     3c6:	b8 01       	movw	r22, r16
     3c8:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     3cc:	c7 01       	movw	r24, r14
     3ce:	b8 01       	movw	r22, r16
     3d0:	ae 01       	movw	r20, r28
     3d2:	47 5e       	subi	r20, 0xE7	; 231
     3d4:	5f 4f       	sbci	r21, 0xFF	; 255
     3d6:	0e 94 49 00 	call	0x92	; 0x92 <_fpadd_parts>
     3da:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__pack_f>
     3de:	a0 96       	adiw	r28, 0x20	; 32
     3e0:	e6 e0       	ldi	r30, 0x06	; 6
     3e2:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__epilogue_restores__+0x18>

000003e6 <__mulsf3>:
     3e6:	a0 e2       	ldi	r26, 0x20	; 32
     3e8:	b0 e0       	ldi	r27, 0x00	; 0
     3ea:	e9 ef       	ldi	r30, 0xF9	; 249
     3ec:	f1 e0       	ldi	r31, 0x01	; 1
     3ee:	0c 94 ca 0d 	jmp	0x1b94	; 0x1b94 <__prologue_saves__>
     3f2:	69 83       	std	Y+1, r22	; 0x01
     3f4:	7a 83       	std	Y+2, r23	; 0x02
     3f6:	8b 83       	std	Y+3, r24	; 0x03
     3f8:	9c 83       	std	Y+4, r25	; 0x04
     3fa:	2d 83       	std	Y+5, r18	; 0x05
     3fc:	3e 83       	std	Y+6, r19	; 0x06
     3fe:	4f 83       	std	Y+7, r20	; 0x07
     400:	58 87       	std	Y+8, r21	; 0x08
     402:	ce 01       	movw	r24, r28
     404:	01 96       	adiw	r24, 0x01	; 1
     406:	be 01       	movw	r22, r28
     408:	67 5f       	subi	r22, 0xF7	; 247
     40a:	7f 4f       	sbci	r23, 0xFF	; 255
     40c:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     410:	ce 01       	movw	r24, r28
     412:	05 96       	adiw	r24, 0x05	; 5
     414:	be 01       	movw	r22, r28
     416:	6f 5e       	subi	r22, 0xEF	; 239
     418:	7f 4f       	sbci	r23, 0xFF	; 255
     41a:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     41e:	99 85       	ldd	r25, Y+9	; 0x09
     420:	92 30       	cpi	r25, 0x02	; 2
     422:	88 f0       	brcs	.+34     	; 0x446 <__mulsf3+0x60>
     424:	89 89       	ldd	r24, Y+17	; 0x11
     426:	82 30       	cpi	r24, 0x02	; 2
     428:	c8 f0       	brcs	.+50     	; 0x45c <__mulsf3+0x76>
     42a:	94 30       	cpi	r25, 0x04	; 4
     42c:	19 f4       	brne	.+6      	; 0x434 <__mulsf3+0x4e>
     42e:	82 30       	cpi	r24, 0x02	; 2
     430:	51 f4       	brne	.+20     	; 0x446 <__mulsf3+0x60>
     432:	04 c0       	rjmp	.+8      	; 0x43c <__mulsf3+0x56>
     434:	84 30       	cpi	r24, 0x04	; 4
     436:	29 f4       	brne	.+10     	; 0x442 <__mulsf3+0x5c>
     438:	92 30       	cpi	r25, 0x02	; 2
     43a:	81 f4       	brne	.+32     	; 0x45c <__mulsf3+0x76>
     43c:	80 e6       	ldi	r24, 0x60	; 96
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	c6 c0       	rjmp	.+396    	; 0x5ce <__mulsf3+0x1e8>
     442:	92 30       	cpi	r25, 0x02	; 2
     444:	49 f4       	brne	.+18     	; 0x458 <__mulsf3+0x72>
     446:	20 e0       	ldi	r18, 0x00	; 0
     448:	9a 85       	ldd	r25, Y+10	; 0x0a
     44a:	8a 89       	ldd	r24, Y+18	; 0x12
     44c:	98 13       	cpse	r25, r24
     44e:	21 e0       	ldi	r18, 0x01	; 1
     450:	2a 87       	std	Y+10, r18	; 0x0a
     452:	ce 01       	movw	r24, r28
     454:	09 96       	adiw	r24, 0x09	; 9
     456:	bb c0       	rjmp	.+374    	; 0x5ce <__mulsf3+0x1e8>
     458:	82 30       	cpi	r24, 0x02	; 2
     45a:	49 f4       	brne	.+18     	; 0x46e <__mulsf3+0x88>
     45c:	20 e0       	ldi	r18, 0x00	; 0
     45e:	9a 85       	ldd	r25, Y+10	; 0x0a
     460:	8a 89       	ldd	r24, Y+18	; 0x12
     462:	98 13       	cpse	r25, r24
     464:	21 e0       	ldi	r18, 0x01	; 1
     466:	2a 8b       	std	Y+18, r18	; 0x12
     468:	ce 01       	movw	r24, r28
     46a:	41 96       	adiw	r24, 0x11	; 17
     46c:	b0 c0       	rjmp	.+352    	; 0x5ce <__mulsf3+0x1e8>
     46e:	2d 84       	ldd	r2, Y+13	; 0x0d
     470:	3e 84       	ldd	r3, Y+14	; 0x0e
     472:	4f 84       	ldd	r4, Y+15	; 0x0f
     474:	58 88       	ldd	r5, Y+16	; 0x10
     476:	6d 88       	ldd	r6, Y+21	; 0x15
     478:	7e 88       	ldd	r7, Y+22	; 0x16
     47a:	8f 88       	ldd	r8, Y+23	; 0x17
     47c:	98 8c       	ldd	r9, Y+24	; 0x18
     47e:	ee 24       	eor	r14, r14
     480:	ff 24       	eor	r15, r15
     482:	87 01       	movw	r16, r14
     484:	aa 24       	eor	r10, r10
     486:	bb 24       	eor	r11, r11
     488:	65 01       	movw	r12, r10
     48a:	40 e0       	ldi	r20, 0x00	; 0
     48c:	50 e0       	ldi	r21, 0x00	; 0
     48e:	60 e0       	ldi	r22, 0x00	; 0
     490:	70 e0       	ldi	r23, 0x00	; 0
     492:	e0 e0       	ldi	r30, 0x00	; 0
     494:	f0 e0       	ldi	r31, 0x00	; 0
     496:	c1 01       	movw	r24, r2
     498:	81 70       	andi	r24, 0x01	; 1
     49a:	90 70       	andi	r25, 0x00	; 0
     49c:	89 2b       	or	r24, r25
     49e:	e9 f0       	breq	.+58     	; 0x4da <__mulsf3+0xf4>
     4a0:	e6 0c       	add	r14, r6
     4a2:	f7 1c       	adc	r15, r7
     4a4:	08 1d       	adc	r16, r8
     4a6:	19 1d       	adc	r17, r9
     4a8:	9a 01       	movw	r18, r20
     4aa:	ab 01       	movw	r20, r22
     4ac:	2a 0d       	add	r18, r10
     4ae:	3b 1d       	adc	r19, r11
     4b0:	4c 1d       	adc	r20, r12
     4b2:	5d 1d       	adc	r21, r13
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	a0 e0       	ldi	r26, 0x00	; 0
     4ba:	b0 e0       	ldi	r27, 0x00	; 0
     4bc:	e6 14       	cp	r14, r6
     4be:	f7 04       	cpc	r15, r7
     4c0:	08 05       	cpc	r16, r8
     4c2:	19 05       	cpc	r17, r9
     4c4:	20 f4       	brcc	.+8      	; 0x4ce <__mulsf3+0xe8>
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	a0 e0       	ldi	r26, 0x00	; 0
     4cc:	b0 e0       	ldi	r27, 0x00	; 0
     4ce:	ba 01       	movw	r22, r20
     4d0:	a9 01       	movw	r20, r18
     4d2:	48 0f       	add	r20, r24
     4d4:	59 1f       	adc	r21, r25
     4d6:	6a 1f       	adc	r22, r26
     4d8:	7b 1f       	adc	r23, r27
     4da:	aa 0c       	add	r10, r10
     4dc:	bb 1c       	adc	r11, r11
     4de:	cc 1c       	adc	r12, r12
     4e0:	dd 1c       	adc	r13, r13
     4e2:	97 fe       	sbrs	r9, 7
     4e4:	08 c0       	rjmp	.+16     	; 0x4f6 <__mulsf3+0x110>
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	a0 e0       	ldi	r26, 0x00	; 0
     4ec:	b0 e0       	ldi	r27, 0x00	; 0
     4ee:	a8 2a       	or	r10, r24
     4f0:	b9 2a       	or	r11, r25
     4f2:	ca 2a       	or	r12, r26
     4f4:	db 2a       	or	r13, r27
     4f6:	31 96       	adiw	r30, 0x01	; 1
     4f8:	e0 32       	cpi	r30, 0x20	; 32
     4fa:	f1 05       	cpc	r31, r1
     4fc:	49 f0       	breq	.+18     	; 0x510 <__mulsf3+0x12a>
     4fe:	66 0c       	add	r6, r6
     500:	77 1c       	adc	r7, r7
     502:	88 1c       	adc	r8, r8
     504:	99 1c       	adc	r9, r9
     506:	56 94       	lsr	r5
     508:	47 94       	ror	r4
     50a:	37 94       	ror	r3
     50c:	27 94       	ror	r2
     50e:	c3 cf       	rjmp	.-122    	; 0x496 <__mulsf3+0xb0>
     510:	fa 85       	ldd	r31, Y+10	; 0x0a
     512:	ea 89       	ldd	r30, Y+18	; 0x12
     514:	2b 89       	ldd	r18, Y+19	; 0x13
     516:	3c 89       	ldd	r19, Y+20	; 0x14
     518:	8b 85       	ldd	r24, Y+11	; 0x0b
     51a:	9c 85       	ldd	r25, Y+12	; 0x0c
     51c:	28 0f       	add	r18, r24
     51e:	39 1f       	adc	r19, r25
     520:	2e 5f       	subi	r18, 0xFE	; 254
     522:	3f 4f       	sbci	r19, 0xFF	; 255
     524:	17 c0       	rjmp	.+46     	; 0x554 <__mulsf3+0x16e>
     526:	ca 01       	movw	r24, r20
     528:	81 70       	andi	r24, 0x01	; 1
     52a:	90 70       	andi	r25, 0x00	; 0
     52c:	89 2b       	or	r24, r25
     52e:	61 f0       	breq	.+24     	; 0x548 <__mulsf3+0x162>
     530:	16 95       	lsr	r17
     532:	07 95       	ror	r16
     534:	f7 94       	ror	r15
     536:	e7 94       	ror	r14
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	a0 e0       	ldi	r26, 0x00	; 0
     53e:	b0 e8       	ldi	r27, 0x80	; 128
     540:	e8 2a       	or	r14, r24
     542:	f9 2a       	or	r15, r25
     544:	0a 2b       	or	r16, r26
     546:	1b 2b       	or	r17, r27
     548:	76 95       	lsr	r23
     54a:	67 95       	ror	r22
     54c:	57 95       	ror	r21
     54e:	47 95       	ror	r20
     550:	2f 5f       	subi	r18, 0xFF	; 255
     552:	3f 4f       	sbci	r19, 0xFF	; 255
     554:	77 fd       	sbrc	r23, 7
     556:	e7 cf       	rjmp	.-50     	; 0x526 <__mulsf3+0x140>
     558:	0c c0       	rjmp	.+24     	; 0x572 <__mulsf3+0x18c>
     55a:	44 0f       	add	r20, r20
     55c:	55 1f       	adc	r21, r21
     55e:	66 1f       	adc	r22, r22
     560:	77 1f       	adc	r23, r23
     562:	17 fd       	sbrc	r17, 7
     564:	41 60       	ori	r20, 0x01	; 1
     566:	ee 0c       	add	r14, r14
     568:	ff 1c       	adc	r15, r15
     56a:	00 1f       	adc	r16, r16
     56c:	11 1f       	adc	r17, r17
     56e:	21 50       	subi	r18, 0x01	; 1
     570:	30 40       	sbci	r19, 0x00	; 0
     572:	40 30       	cpi	r20, 0x00	; 0
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	59 07       	cpc	r21, r25
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	69 07       	cpc	r22, r25
     57c:	90 e4       	ldi	r25, 0x40	; 64
     57e:	79 07       	cpc	r23, r25
     580:	60 f3       	brcs	.-40     	; 0x55a <__mulsf3+0x174>
     582:	2b 8f       	std	Y+27, r18	; 0x1b
     584:	3c 8f       	std	Y+28, r19	; 0x1c
     586:	db 01       	movw	r26, r22
     588:	ca 01       	movw	r24, r20
     58a:	8f 77       	andi	r24, 0x7F	; 127
     58c:	90 70       	andi	r25, 0x00	; 0
     58e:	a0 70       	andi	r26, 0x00	; 0
     590:	b0 70       	andi	r27, 0x00	; 0
     592:	80 34       	cpi	r24, 0x40	; 64
     594:	91 05       	cpc	r25, r1
     596:	a1 05       	cpc	r26, r1
     598:	b1 05       	cpc	r27, r1
     59a:	61 f4       	brne	.+24     	; 0x5b4 <__mulsf3+0x1ce>
     59c:	47 fd       	sbrc	r20, 7
     59e:	0a c0       	rjmp	.+20     	; 0x5b4 <__mulsf3+0x1ce>
     5a0:	e1 14       	cp	r14, r1
     5a2:	f1 04       	cpc	r15, r1
     5a4:	01 05       	cpc	r16, r1
     5a6:	11 05       	cpc	r17, r1
     5a8:	29 f0       	breq	.+10     	; 0x5b4 <__mulsf3+0x1ce>
     5aa:	40 5c       	subi	r20, 0xC0	; 192
     5ac:	5f 4f       	sbci	r21, 0xFF	; 255
     5ae:	6f 4f       	sbci	r22, 0xFF	; 255
     5b0:	7f 4f       	sbci	r23, 0xFF	; 255
     5b2:	40 78       	andi	r20, 0x80	; 128
     5b4:	1a 8e       	std	Y+26, r1	; 0x1a
     5b6:	fe 17       	cp	r31, r30
     5b8:	11 f0       	breq	.+4      	; 0x5be <__mulsf3+0x1d8>
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	8a 8f       	std	Y+26, r24	; 0x1a
     5be:	4d 8f       	std	Y+29, r20	; 0x1d
     5c0:	5e 8f       	std	Y+30, r21	; 0x1e
     5c2:	6f 8f       	std	Y+31, r22	; 0x1f
     5c4:	78 a3       	std	Y+32, r23	; 0x20
     5c6:	83 e0       	ldi	r24, 0x03	; 3
     5c8:	89 8f       	std	Y+25, r24	; 0x19
     5ca:	ce 01       	movw	r24, r28
     5cc:	49 96       	adiw	r24, 0x19	; 25
     5ce:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__pack_f>
     5d2:	a0 96       	adiw	r28, 0x20	; 32
     5d4:	e2 e1       	ldi	r30, 0x12	; 18
     5d6:	0c 94 e6 0d 	jmp	0x1bcc	; 0x1bcc <__epilogue_restores__>

000005da <__divsf3>:
     5da:	a8 e1       	ldi	r26, 0x18	; 24
     5dc:	b0 e0       	ldi	r27, 0x00	; 0
     5de:	e3 ef       	ldi	r30, 0xF3	; 243
     5e0:	f2 e0       	ldi	r31, 0x02	; 2
     5e2:	0c 94 d2 0d 	jmp	0x1ba4	; 0x1ba4 <__prologue_saves__+0x10>
     5e6:	69 83       	std	Y+1, r22	; 0x01
     5e8:	7a 83       	std	Y+2, r23	; 0x02
     5ea:	8b 83       	std	Y+3, r24	; 0x03
     5ec:	9c 83       	std	Y+4, r25	; 0x04
     5ee:	2d 83       	std	Y+5, r18	; 0x05
     5f0:	3e 83       	std	Y+6, r19	; 0x06
     5f2:	4f 83       	std	Y+7, r20	; 0x07
     5f4:	58 87       	std	Y+8, r21	; 0x08
     5f6:	b9 e0       	ldi	r27, 0x09	; 9
     5f8:	eb 2e       	mov	r14, r27
     5fa:	f1 2c       	mov	r15, r1
     5fc:	ec 0e       	add	r14, r28
     5fe:	fd 1e       	adc	r15, r29
     600:	ce 01       	movw	r24, r28
     602:	01 96       	adiw	r24, 0x01	; 1
     604:	b7 01       	movw	r22, r14
     606:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     60a:	8e 01       	movw	r16, r28
     60c:	0f 5e       	subi	r16, 0xEF	; 239
     60e:	1f 4f       	sbci	r17, 0xFF	; 255
     610:	ce 01       	movw	r24, r28
     612:	05 96       	adiw	r24, 0x05	; 5
     614:	b8 01       	movw	r22, r16
     616:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     61a:	29 85       	ldd	r18, Y+9	; 0x09
     61c:	22 30       	cpi	r18, 0x02	; 2
     61e:	08 f4       	brcc	.+2      	; 0x622 <__divsf3+0x48>
     620:	7e c0       	rjmp	.+252    	; 0x71e <__divsf3+0x144>
     622:	39 89       	ldd	r19, Y+17	; 0x11
     624:	32 30       	cpi	r19, 0x02	; 2
     626:	10 f4       	brcc	.+4      	; 0x62c <__divsf3+0x52>
     628:	b8 01       	movw	r22, r16
     62a:	7c c0       	rjmp	.+248    	; 0x724 <__divsf3+0x14a>
     62c:	8a 85       	ldd	r24, Y+10	; 0x0a
     62e:	9a 89       	ldd	r25, Y+18	; 0x12
     630:	89 27       	eor	r24, r25
     632:	8a 87       	std	Y+10, r24	; 0x0a
     634:	24 30       	cpi	r18, 0x04	; 4
     636:	11 f0       	breq	.+4      	; 0x63c <__divsf3+0x62>
     638:	22 30       	cpi	r18, 0x02	; 2
     63a:	31 f4       	brne	.+12     	; 0x648 <__divsf3+0x6e>
     63c:	23 17       	cp	r18, r19
     63e:	09 f0       	breq	.+2      	; 0x642 <__divsf3+0x68>
     640:	6e c0       	rjmp	.+220    	; 0x71e <__divsf3+0x144>
     642:	60 e6       	ldi	r22, 0x60	; 96
     644:	70 e0       	ldi	r23, 0x00	; 0
     646:	6e c0       	rjmp	.+220    	; 0x724 <__divsf3+0x14a>
     648:	34 30       	cpi	r19, 0x04	; 4
     64a:	39 f4       	brne	.+14     	; 0x65a <__divsf3+0x80>
     64c:	1d 86       	std	Y+13, r1	; 0x0d
     64e:	1e 86       	std	Y+14, r1	; 0x0e
     650:	1f 86       	std	Y+15, r1	; 0x0f
     652:	18 8a       	std	Y+16, r1	; 0x10
     654:	1c 86       	std	Y+12, r1	; 0x0c
     656:	1b 86       	std	Y+11, r1	; 0x0b
     658:	04 c0       	rjmp	.+8      	; 0x662 <__divsf3+0x88>
     65a:	32 30       	cpi	r19, 0x02	; 2
     65c:	21 f4       	brne	.+8      	; 0x666 <__divsf3+0x8c>
     65e:	84 e0       	ldi	r24, 0x04	; 4
     660:	89 87       	std	Y+9, r24	; 0x09
     662:	b7 01       	movw	r22, r14
     664:	5f c0       	rjmp	.+190    	; 0x724 <__divsf3+0x14a>
     666:	2b 85       	ldd	r18, Y+11	; 0x0b
     668:	3c 85       	ldd	r19, Y+12	; 0x0c
     66a:	8b 89       	ldd	r24, Y+19	; 0x13
     66c:	9c 89       	ldd	r25, Y+20	; 0x14
     66e:	28 1b       	sub	r18, r24
     670:	39 0b       	sbc	r19, r25
     672:	3c 87       	std	Y+12, r19	; 0x0c
     674:	2b 87       	std	Y+11, r18	; 0x0b
     676:	ed 84       	ldd	r14, Y+13	; 0x0d
     678:	fe 84       	ldd	r15, Y+14	; 0x0e
     67a:	0f 85       	ldd	r16, Y+15	; 0x0f
     67c:	18 89       	ldd	r17, Y+16	; 0x10
     67e:	ad 88       	ldd	r10, Y+21	; 0x15
     680:	be 88       	ldd	r11, Y+22	; 0x16
     682:	cf 88       	ldd	r12, Y+23	; 0x17
     684:	d8 8c       	ldd	r13, Y+24	; 0x18
     686:	ea 14       	cp	r14, r10
     688:	fb 04       	cpc	r15, r11
     68a:	0c 05       	cpc	r16, r12
     68c:	1d 05       	cpc	r17, r13
     68e:	40 f4       	brcc	.+16     	; 0x6a0 <__divsf3+0xc6>
     690:	ee 0c       	add	r14, r14
     692:	ff 1c       	adc	r15, r15
     694:	00 1f       	adc	r16, r16
     696:	11 1f       	adc	r17, r17
     698:	21 50       	subi	r18, 0x01	; 1
     69a:	30 40       	sbci	r19, 0x00	; 0
     69c:	3c 87       	std	Y+12, r19	; 0x0c
     69e:	2b 87       	std	Y+11, r18	; 0x0b
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	40 e0       	ldi	r20, 0x00	; 0
     6a6:	50 e0       	ldi	r21, 0x00	; 0
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	a0 e0       	ldi	r26, 0x00	; 0
     6ae:	b0 e4       	ldi	r27, 0x40	; 64
     6b0:	60 e0       	ldi	r22, 0x00	; 0
     6b2:	70 e0       	ldi	r23, 0x00	; 0
     6b4:	ea 14       	cp	r14, r10
     6b6:	fb 04       	cpc	r15, r11
     6b8:	0c 05       	cpc	r16, r12
     6ba:	1d 05       	cpc	r17, r13
     6bc:	40 f0       	brcs	.+16     	; 0x6ce <__divsf3+0xf4>
     6be:	28 2b       	or	r18, r24
     6c0:	39 2b       	or	r19, r25
     6c2:	4a 2b       	or	r20, r26
     6c4:	5b 2b       	or	r21, r27
     6c6:	ea 18       	sub	r14, r10
     6c8:	fb 08       	sbc	r15, r11
     6ca:	0c 09       	sbc	r16, r12
     6cc:	1d 09       	sbc	r17, r13
     6ce:	b6 95       	lsr	r27
     6d0:	a7 95       	ror	r26
     6d2:	97 95       	ror	r25
     6d4:	87 95       	ror	r24
     6d6:	ee 0c       	add	r14, r14
     6d8:	ff 1c       	adc	r15, r15
     6da:	00 1f       	adc	r16, r16
     6dc:	11 1f       	adc	r17, r17
     6de:	6f 5f       	subi	r22, 0xFF	; 255
     6e0:	7f 4f       	sbci	r23, 0xFF	; 255
     6e2:	6f 31       	cpi	r22, 0x1F	; 31
     6e4:	71 05       	cpc	r23, r1
     6e6:	31 f7       	brne	.-52     	; 0x6b4 <__divsf3+0xda>
     6e8:	da 01       	movw	r26, r20
     6ea:	c9 01       	movw	r24, r18
     6ec:	8f 77       	andi	r24, 0x7F	; 127
     6ee:	90 70       	andi	r25, 0x00	; 0
     6f0:	a0 70       	andi	r26, 0x00	; 0
     6f2:	b0 70       	andi	r27, 0x00	; 0
     6f4:	80 34       	cpi	r24, 0x40	; 64
     6f6:	91 05       	cpc	r25, r1
     6f8:	a1 05       	cpc	r26, r1
     6fa:	b1 05       	cpc	r27, r1
     6fc:	61 f4       	brne	.+24     	; 0x716 <__divsf3+0x13c>
     6fe:	27 fd       	sbrc	r18, 7
     700:	0a c0       	rjmp	.+20     	; 0x716 <__divsf3+0x13c>
     702:	e1 14       	cp	r14, r1
     704:	f1 04       	cpc	r15, r1
     706:	01 05       	cpc	r16, r1
     708:	11 05       	cpc	r17, r1
     70a:	29 f0       	breq	.+10     	; 0x716 <__divsf3+0x13c>
     70c:	20 5c       	subi	r18, 0xC0	; 192
     70e:	3f 4f       	sbci	r19, 0xFF	; 255
     710:	4f 4f       	sbci	r20, 0xFF	; 255
     712:	5f 4f       	sbci	r21, 0xFF	; 255
     714:	20 78       	andi	r18, 0x80	; 128
     716:	2d 87       	std	Y+13, r18	; 0x0d
     718:	3e 87       	std	Y+14, r19	; 0x0e
     71a:	4f 87       	std	Y+15, r20	; 0x0f
     71c:	58 8b       	std	Y+16, r21	; 0x10
     71e:	be 01       	movw	r22, r28
     720:	67 5f       	subi	r22, 0xF7	; 247
     722:	7f 4f       	sbci	r23, 0xFF	; 255
     724:	cb 01       	movw	r24, r22
     726:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__pack_f>
     72a:	68 96       	adiw	r28, 0x18	; 24
     72c:	ea e0       	ldi	r30, 0x0A	; 10
     72e:	0c 94 ee 0d 	jmp	0x1bdc	; 0x1bdc <__epilogue_restores__+0x10>

00000732 <__gtsf2>:
     732:	a8 e1       	ldi	r26, 0x18	; 24
     734:	b0 e0       	ldi	r27, 0x00	; 0
     736:	ef e9       	ldi	r30, 0x9F	; 159
     738:	f3 e0       	ldi	r31, 0x03	; 3
     73a:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__prologue_saves__+0x18>
     73e:	69 83       	std	Y+1, r22	; 0x01
     740:	7a 83       	std	Y+2, r23	; 0x02
     742:	8b 83       	std	Y+3, r24	; 0x03
     744:	9c 83       	std	Y+4, r25	; 0x04
     746:	2d 83       	std	Y+5, r18	; 0x05
     748:	3e 83       	std	Y+6, r19	; 0x06
     74a:	4f 83       	std	Y+7, r20	; 0x07
     74c:	58 87       	std	Y+8, r21	; 0x08
     74e:	89 e0       	ldi	r24, 0x09	; 9
     750:	e8 2e       	mov	r14, r24
     752:	f1 2c       	mov	r15, r1
     754:	ec 0e       	add	r14, r28
     756:	fd 1e       	adc	r15, r29
     758:	ce 01       	movw	r24, r28
     75a:	01 96       	adiw	r24, 0x01	; 1
     75c:	b7 01       	movw	r22, r14
     75e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     762:	8e 01       	movw	r16, r28
     764:	0f 5e       	subi	r16, 0xEF	; 239
     766:	1f 4f       	sbci	r17, 0xFF	; 255
     768:	ce 01       	movw	r24, r28
     76a:	05 96       	adiw	r24, 0x05	; 5
     76c:	b8 01       	movw	r22, r16
     76e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     772:	89 85       	ldd	r24, Y+9	; 0x09
     774:	82 30       	cpi	r24, 0x02	; 2
     776:	40 f0       	brcs	.+16     	; 0x788 <__gtsf2+0x56>
     778:	89 89       	ldd	r24, Y+17	; 0x11
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	28 f0       	brcs	.+10     	; 0x788 <__gtsf2+0x56>
     77e:	c7 01       	movw	r24, r14
     780:	b8 01       	movw	r22, r16
     782:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fpcmp_parts_f>
     786:	01 c0       	rjmp	.+2      	; 0x78a <__gtsf2+0x58>
     788:	8f ef       	ldi	r24, 0xFF	; 255
     78a:	68 96       	adiw	r28, 0x18	; 24
     78c:	e6 e0       	ldi	r30, 0x06	; 6
     78e:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__epilogue_restores__+0x18>

00000792 <__gesf2>:
     792:	a8 e1       	ldi	r26, 0x18	; 24
     794:	b0 e0       	ldi	r27, 0x00	; 0
     796:	ef ec       	ldi	r30, 0xCF	; 207
     798:	f3 e0       	ldi	r31, 0x03	; 3
     79a:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__prologue_saves__+0x18>
     79e:	69 83       	std	Y+1, r22	; 0x01
     7a0:	7a 83       	std	Y+2, r23	; 0x02
     7a2:	8b 83       	std	Y+3, r24	; 0x03
     7a4:	9c 83       	std	Y+4, r25	; 0x04
     7a6:	2d 83       	std	Y+5, r18	; 0x05
     7a8:	3e 83       	std	Y+6, r19	; 0x06
     7aa:	4f 83       	std	Y+7, r20	; 0x07
     7ac:	58 87       	std	Y+8, r21	; 0x08
     7ae:	89 e0       	ldi	r24, 0x09	; 9
     7b0:	e8 2e       	mov	r14, r24
     7b2:	f1 2c       	mov	r15, r1
     7b4:	ec 0e       	add	r14, r28
     7b6:	fd 1e       	adc	r15, r29
     7b8:	ce 01       	movw	r24, r28
     7ba:	01 96       	adiw	r24, 0x01	; 1
     7bc:	b7 01       	movw	r22, r14
     7be:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     7c2:	8e 01       	movw	r16, r28
     7c4:	0f 5e       	subi	r16, 0xEF	; 239
     7c6:	1f 4f       	sbci	r17, 0xFF	; 255
     7c8:	ce 01       	movw	r24, r28
     7ca:	05 96       	adiw	r24, 0x05	; 5
     7cc:	b8 01       	movw	r22, r16
     7ce:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     7d2:	89 85       	ldd	r24, Y+9	; 0x09
     7d4:	82 30       	cpi	r24, 0x02	; 2
     7d6:	40 f0       	brcs	.+16     	; 0x7e8 <__gesf2+0x56>
     7d8:	89 89       	ldd	r24, Y+17	; 0x11
     7da:	82 30       	cpi	r24, 0x02	; 2
     7dc:	28 f0       	brcs	.+10     	; 0x7e8 <__gesf2+0x56>
     7de:	c7 01       	movw	r24, r14
     7e0:	b8 01       	movw	r22, r16
     7e2:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fpcmp_parts_f>
     7e6:	01 c0       	rjmp	.+2      	; 0x7ea <__gesf2+0x58>
     7e8:	8f ef       	ldi	r24, 0xFF	; 255
     7ea:	68 96       	adiw	r28, 0x18	; 24
     7ec:	e6 e0       	ldi	r30, 0x06	; 6
     7ee:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__epilogue_restores__+0x18>

000007f2 <__ltsf2>:
     7f2:	a8 e1       	ldi	r26, 0x18	; 24
     7f4:	b0 e0       	ldi	r27, 0x00	; 0
     7f6:	ef ef       	ldi	r30, 0xFF	; 255
     7f8:	f3 e0       	ldi	r31, 0x03	; 3
     7fa:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__prologue_saves__+0x18>
     7fe:	69 83       	std	Y+1, r22	; 0x01
     800:	7a 83       	std	Y+2, r23	; 0x02
     802:	8b 83       	std	Y+3, r24	; 0x03
     804:	9c 83       	std	Y+4, r25	; 0x04
     806:	2d 83       	std	Y+5, r18	; 0x05
     808:	3e 83       	std	Y+6, r19	; 0x06
     80a:	4f 83       	std	Y+7, r20	; 0x07
     80c:	58 87       	std	Y+8, r21	; 0x08
     80e:	89 e0       	ldi	r24, 0x09	; 9
     810:	e8 2e       	mov	r14, r24
     812:	f1 2c       	mov	r15, r1
     814:	ec 0e       	add	r14, r28
     816:	fd 1e       	adc	r15, r29
     818:	ce 01       	movw	r24, r28
     81a:	01 96       	adiw	r24, 0x01	; 1
     81c:	b7 01       	movw	r22, r14
     81e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     822:	8e 01       	movw	r16, r28
     824:	0f 5e       	subi	r16, 0xEF	; 239
     826:	1f 4f       	sbci	r17, 0xFF	; 255
     828:	ce 01       	movw	r24, r28
     82a:	05 96       	adiw	r24, 0x05	; 5
     82c:	b8 01       	movw	r22, r16
     82e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__unpack_f>
     832:	89 85       	ldd	r24, Y+9	; 0x09
     834:	82 30       	cpi	r24, 0x02	; 2
     836:	40 f0       	brcs	.+16     	; 0x848 <__ltsf2+0x56>
     838:	89 89       	ldd	r24, Y+17	; 0x11
     83a:	82 30       	cpi	r24, 0x02	; 2
     83c:	28 f0       	brcs	.+10     	; 0x848 <__ltsf2+0x56>
     83e:	c7 01       	movw	r24, r14
     840:	b8 01       	movw	r22, r16
     842:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fpcmp_parts_f>
     846:	01 c0       	rjmp	.+2      	; 0x84a <__ltsf2+0x58>
     848:	81 e0       	ldi	r24, 0x01	; 1
     84a:	68 96       	adiw	r28, 0x18	; 24
     84c:	e6 e0       	ldi	r30, 0x06	; 6
     84e:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__epilogue_restores__+0x18>

00000852 <__floatunsisf>:
     852:	a8 e0       	ldi	r26, 0x08	; 8
     854:	b0 e0       	ldi	r27, 0x00	; 0
     856:	ef e2       	ldi	r30, 0x2F	; 47
     858:	f4 e0       	ldi	r31, 0x04	; 4
     85a:	0c 94 d2 0d 	jmp	0x1ba4	; 0x1ba4 <__prologue_saves__+0x10>
     85e:	7b 01       	movw	r14, r22
     860:	8c 01       	movw	r16, r24
     862:	61 15       	cp	r22, r1
     864:	71 05       	cpc	r23, r1
     866:	81 05       	cpc	r24, r1
     868:	91 05       	cpc	r25, r1
     86a:	19 f4       	brne	.+6      	; 0x872 <__stack+0x13>
     86c:	82 e0       	ldi	r24, 0x02	; 2
     86e:	89 83       	std	Y+1, r24	; 0x01
     870:	60 c0       	rjmp	.+192    	; 0x932 <__stack+0xd3>
     872:	83 e0       	ldi	r24, 0x03	; 3
     874:	89 83       	std	Y+1, r24	; 0x01
     876:	8e e1       	ldi	r24, 0x1E	; 30
     878:	c8 2e       	mov	r12, r24
     87a:	d1 2c       	mov	r13, r1
     87c:	dc 82       	std	Y+4, r13	; 0x04
     87e:	cb 82       	std	Y+3, r12	; 0x03
     880:	ed 82       	std	Y+5, r14	; 0x05
     882:	fe 82       	std	Y+6, r15	; 0x06
     884:	0f 83       	std	Y+7, r16	; 0x07
     886:	18 87       	std	Y+8, r17	; 0x08
     888:	c8 01       	movw	r24, r16
     88a:	b7 01       	movw	r22, r14
     88c:	0e 94 a2 04 	call	0x944	; 0x944 <__clzsi2>
     890:	fc 01       	movw	r30, r24
     892:	31 97       	sbiw	r30, 0x01	; 1
     894:	f7 ff       	sbrs	r31, 7
     896:	3b c0       	rjmp	.+118    	; 0x90e <__stack+0xaf>
     898:	22 27       	eor	r18, r18
     89a:	33 27       	eor	r19, r19
     89c:	2e 1b       	sub	r18, r30
     89e:	3f 0b       	sbc	r19, r31
     8a0:	57 01       	movw	r10, r14
     8a2:	68 01       	movw	r12, r16
     8a4:	02 2e       	mov	r0, r18
     8a6:	04 c0       	rjmp	.+8      	; 0x8b0 <__stack+0x51>
     8a8:	d6 94       	lsr	r13
     8aa:	c7 94       	ror	r12
     8ac:	b7 94       	ror	r11
     8ae:	a7 94       	ror	r10
     8b0:	0a 94       	dec	r0
     8b2:	d2 f7       	brpl	.-12     	; 0x8a8 <__stack+0x49>
     8b4:	40 e0       	ldi	r20, 0x00	; 0
     8b6:	50 e0       	ldi	r21, 0x00	; 0
     8b8:	60 e0       	ldi	r22, 0x00	; 0
     8ba:	70 e0       	ldi	r23, 0x00	; 0
     8bc:	81 e0       	ldi	r24, 0x01	; 1
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	a0 e0       	ldi	r26, 0x00	; 0
     8c2:	b0 e0       	ldi	r27, 0x00	; 0
     8c4:	04 c0       	rjmp	.+8      	; 0x8ce <__stack+0x6f>
     8c6:	88 0f       	add	r24, r24
     8c8:	99 1f       	adc	r25, r25
     8ca:	aa 1f       	adc	r26, r26
     8cc:	bb 1f       	adc	r27, r27
     8ce:	2a 95       	dec	r18
     8d0:	d2 f7       	brpl	.-12     	; 0x8c6 <__stack+0x67>
     8d2:	01 97       	sbiw	r24, 0x01	; 1
     8d4:	a1 09       	sbc	r26, r1
     8d6:	b1 09       	sbc	r27, r1
     8d8:	8e 21       	and	r24, r14
     8da:	9f 21       	and	r25, r15
     8dc:	a0 23       	and	r26, r16
     8de:	b1 23       	and	r27, r17
     8e0:	00 97       	sbiw	r24, 0x00	; 0
     8e2:	a1 05       	cpc	r26, r1
     8e4:	b1 05       	cpc	r27, r1
     8e6:	21 f0       	breq	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	41 e0       	ldi	r20, 0x01	; 1
     8ea:	50 e0       	ldi	r21, 0x00	; 0
     8ec:	60 e0       	ldi	r22, 0x00	; 0
     8ee:	70 e0       	ldi	r23, 0x00	; 0
     8f0:	4a 29       	or	r20, r10
     8f2:	5b 29       	or	r21, r11
     8f4:	6c 29       	or	r22, r12
     8f6:	7d 29       	or	r23, r13
     8f8:	4d 83       	std	Y+5, r20	; 0x05
     8fa:	5e 83       	std	Y+6, r21	; 0x06
     8fc:	6f 83       	std	Y+7, r22	; 0x07
     8fe:	78 87       	std	Y+8, r23	; 0x08
     900:	8e e1       	ldi	r24, 0x1E	; 30
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	8e 1b       	sub	r24, r30
     906:	9f 0b       	sbc	r25, r31
     908:	9c 83       	std	Y+4, r25	; 0x04
     90a:	8b 83       	std	Y+3, r24	; 0x03
     90c:	12 c0       	rjmp	.+36     	; 0x932 <__stack+0xd3>
     90e:	30 97       	sbiw	r30, 0x00	; 0
     910:	81 f0       	breq	.+32     	; 0x932 <__stack+0xd3>
     912:	0e 2e       	mov	r0, r30
     914:	04 c0       	rjmp	.+8      	; 0x91e <__stack+0xbf>
     916:	ee 0c       	add	r14, r14
     918:	ff 1c       	adc	r15, r15
     91a:	00 1f       	adc	r16, r16
     91c:	11 1f       	adc	r17, r17
     91e:	0a 94       	dec	r0
     920:	d2 f7       	brpl	.-12     	; 0x916 <__stack+0xb7>
     922:	ed 82       	std	Y+5, r14	; 0x05
     924:	fe 82       	std	Y+6, r15	; 0x06
     926:	0f 83       	std	Y+7, r16	; 0x07
     928:	18 87       	std	Y+8, r17	; 0x08
     92a:	ce 1a       	sub	r12, r30
     92c:	df 0a       	sbc	r13, r31
     92e:	dc 82       	std	Y+4, r13	; 0x04
     930:	cb 82       	std	Y+3, r12	; 0x03
     932:	1a 82       	std	Y+2, r1	; 0x02
     934:	ce 01       	movw	r24, r28
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__pack_f>
     93c:	28 96       	adiw	r28, 0x08	; 8
     93e:	ea e0       	ldi	r30, 0x0A	; 10
     940:	0c 94 ee 0d 	jmp	0x1bdc	; 0x1bdc <__epilogue_restores__+0x10>

00000944 <__clzsi2>:
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	7b 01       	movw	r14, r22
     94e:	8c 01       	movw	r16, r24
     950:	80 e0       	ldi	r24, 0x00	; 0
     952:	e8 16       	cp	r14, r24
     954:	80 e0       	ldi	r24, 0x00	; 0
     956:	f8 06       	cpc	r15, r24
     958:	81 e0       	ldi	r24, 0x01	; 1
     95a:	08 07       	cpc	r16, r24
     95c:	80 e0       	ldi	r24, 0x00	; 0
     95e:	18 07       	cpc	r17, r24
     960:	88 f4       	brcc	.+34     	; 0x984 <__clzsi2+0x40>
     962:	8f ef       	ldi	r24, 0xFF	; 255
     964:	e8 16       	cp	r14, r24
     966:	f1 04       	cpc	r15, r1
     968:	01 05       	cpc	r16, r1
     96a:	11 05       	cpc	r17, r1
     96c:	31 f0       	breq	.+12     	; 0x97a <__clzsi2+0x36>
     96e:	28 f0       	brcs	.+10     	; 0x97a <__clzsi2+0x36>
     970:	88 e0       	ldi	r24, 0x08	; 8
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	a0 e0       	ldi	r26, 0x00	; 0
     976:	b0 e0       	ldi	r27, 0x00	; 0
     978:	17 c0       	rjmp	.+46     	; 0x9a8 <__clzsi2+0x64>
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	a0 e0       	ldi	r26, 0x00	; 0
     980:	b0 e0       	ldi	r27, 0x00	; 0
     982:	12 c0       	rjmp	.+36     	; 0x9a8 <__clzsi2+0x64>
     984:	80 e0       	ldi	r24, 0x00	; 0
     986:	e8 16       	cp	r14, r24
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	f8 06       	cpc	r15, r24
     98c:	80 e0       	ldi	r24, 0x00	; 0
     98e:	08 07       	cpc	r16, r24
     990:	81 e0       	ldi	r24, 0x01	; 1
     992:	18 07       	cpc	r17, r24
     994:	28 f0       	brcs	.+10     	; 0x9a0 <__clzsi2+0x5c>
     996:	88 e1       	ldi	r24, 0x18	; 24
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e0       	ldi	r26, 0x00	; 0
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	04 c0       	rjmp	.+8      	; 0x9a8 <__clzsi2+0x64>
     9a0:	80 e1       	ldi	r24, 0x10	; 16
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	a0 e0       	ldi	r26, 0x00	; 0
     9a6:	b0 e0       	ldi	r27, 0x00	; 0
     9a8:	20 e2       	ldi	r18, 0x20	; 32
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 e0       	ldi	r20, 0x00	; 0
     9ae:	50 e0       	ldi	r21, 0x00	; 0
     9b0:	28 1b       	sub	r18, r24
     9b2:	39 0b       	sbc	r19, r25
     9b4:	4a 0b       	sbc	r20, r26
     9b6:	5b 0b       	sbc	r21, r27
     9b8:	04 c0       	rjmp	.+8      	; 0x9c2 <__clzsi2+0x7e>
     9ba:	16 95       	lsr	r17
     9bc:	07 95       	ror	r16
     9be:	f7 94       	ror	r15
     9c0:	e7 94       	ror	r14
     9c2:	8a 95       	dec	r24
     9c4:	d2 f7       	brpl	.-12     	; 0x9ba <__clzsi2+0x76>
     9c6:	f7 01       	movw	r30, r14
     9c8:	e8 59       	subi	r30, 0x98	; 152
     9ca:	ff 4f       	sbci	r31, 0xFF	; 255
     9cc:	80 81       	ld	r24, Z
     9ce:	28 1b       	sub	r18, r24
     9d0:	31 09       	sbc	r19, r1
     9d2:	41 09       	sbc	r20, r1
     9d4:	51 09       	sbc	r21, r1
     9d6:	c9 01       	movw	r24, r18
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	ff 90       	pop	r15
     9de:	ef 90       	pop	r14
     9e0:	08 95       	ret

000009e2 <__pack_f>:
     9e2:	df 92       	push	r13
     9e4:	ef 92       	push	r14
     9e6:	ff 92       	push	r15
     9e8:	0f 93       	push	r16
     9ea:	1f 93       	push	r17
     9ec:	fc 01       	movw	r30, r24
     9ee:	e4 80       	ldd	r14, Z+4	; 0x04
     9f0:	f5 80       	ldd	r15, Z+5	; 0x05
     9f2:	06 81       	ldd	r16, Z+6	; 0x06
     9f4:	17 81       	ldd	r17, Z+7	; 0x07
     9f6:	d1 80       	ldd	r13, Z+1	; 0x01
     9f8:	80 81       	ld	r24, Z
     9fa:	82 30       	cpi	r24, 0x02	; 2
     9fc:	48 f4       	brcc	.+18     	; 0xa10 <__pack_f+0x2e>
     9fe:	80 e0       	ldi	r24, 0x00	; 0
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	a0 e1       	ldi	r26, 0x10	; 16
     a04:	b0 e0       	ldi	r27, 0x00	; 0
     a06:	e8 2a       	or	r14, r24
     a08:	f9 2a       	or	r15, r25
     a0a:	0a 2b       	or	r16, r26
     a0c:	1b 2b       	or	r17, r27
     a0e:	a5 c0       	rjmp	.+330    	; 0xb5a <__pack_f+0x178>
     a10:	84 30       	cpi	r24, 0x04	; 4
     a12:	09 f4       	brne	.+2      	; 0xa16 <__pack_f+0x34>
     a14:	9f c0       	rjmp	.+318    	; 0xb54 <__pack_f+0x172>
     a16:	82 30       	cpi	r24, 0x02	; 2
     a18:	21 f4       	brne	.+8      	; 0xa22 <__pack_f+0x40>
     a1a:	ee 24       	eor	r14, r14
     a1c:	ff 24       	eor	r15, r15
     a1e:	87 01       	movw	r16, r14
     a20:	05 c0       	rjmp	.+10     	; 0xa2c <__pack_f+0x4a>
     a22:	e1 14       	cp	r14, r1
     a24:	f1 04       	cpc	r15, r1
     a26:	01 05       	cpc	r16, r1
     a28:	11 05       	cpc	r17, r1
     a2a:	19 f4       	brne	.+6      	; 0xa32 <__pack_f+0x50>
     a2c:	e0 e0       	ldi	r30, 0x00	; 0
     a2e:	f0 e0       	ldi	r31, 0x00	; 0
     a30:	96 c0       	rjmp	.+300    	; 0xb5e <__pack_f+0x17c>
     a32:	62 81       	ldd	r22, Z+2	; 0x02
     a34:	73 81       	ldd	r23, Z+3	; 0x03
     a36:	9f ef       	ldi	r25, 0xFF	; 255
     a38:	62 38       	cpi	r22, 0x82	; 130
     a3a:	79 07       	cpc	r23, r25
     a3c:	0c f0       	brlt	.+2      	; 0xa40 <__pack_f+0x5e>
     a3e:	5b c0       	rjmp	.+182    	; 0xaf6 <__pack_f+0x114>
     a40:	22 e8       	ldi	r18, 0x82	; 130
     a42:	3f ef       	ldi	r19, 0xFF	; 255
     a44:	26 1b       	sub	r18, r22
     a46:	37 0b       	sbc	r19, r23
     a48:	2a 31       	cpi	r18, 0x1A	; 26
     a4a:	31 05       	cpc	r19, r1
     a4c:	2c f0       	brlt	.+10     	; 0xa58 <__pack_f+0x76>
     a4e:	20 e0       	ldi	r18, 0x00	; 0
     a50:	30 e0       	ldi	r19, 0x00	; 0
     a52:	40 e0       	ldi	r20, 0x00	; 0
     a54:	50 e0       	ldi	r21, 0x00	; 0
     a56:	2a c0       	rjmp	.+84     	; 0xaac <__pack_f+0xca>
     a58:	b8 01       	movw	r22, r16
     a5a:	a7 01       	movw	r20, r14
     a5c:	02 2e       	mov	r0, r18
     a5e:	04 c0       	rjmp	.+8      	; 0xa68 <__pack_f+0x86>
     a60:	76 95       	lsr	r23
     a62:	67 95       	ror	r22
     a64:	57 95       	ror	r21
     a66:	47 95       	ror	r20
     a68:	0a 94       	dec	r0
     a6a:	d2 f7       	brpl	.-12     	; 0xa60 <__pack_f+0x7e>
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	a0 e0       	ldi	r26, 0x00	; 0
     a72:	b0 e0       	ldi	r27, 0x00	; 0
     a74:	04 c0       	rjmp	.+8      	; 0xa7e <__pack_f+0x9c>
     a76:	88 0f       	add	r24, r24
     a78:	99 1f       	adc	r25, r25
     a7a:	aa 1f       	adc	r26, r26
     a7c:	bb 1f       	adc	r27, r27
     a7e:	2a 95       	dec	r18
     a80:	d2 f7       	brpl	.-12     	; 0xa76 <__pack_f+0x94>
     a82:	01 97       	sbiw	r24, 0x01	; 1
     a84:	a1 09       	sbc	r26, r1
     a86:	b1 09       	sbc	r27, r1
     a88:	8e 21       	and	r24, r14
     a8a:	9f 21       	and	r25, r15
     a8c:	a0 23       	and	r26, r16
     a8e:	b1 23       	and	r27, r17
     a90:	00 97       	sbiw	r24, 0x00	; 0
     a92:	a1 05       	cpc	r26, r1
     a94:	b1 05       	cpc	r27, r1
     a96:	21 f0       	breq	.+8      	; 0xaa0 <__pack_f+0xbe>
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	a0 e0       	ldi	r26, 0x00	; 0
     a9e:	b0 e0       	ldi	r27, 0x00	; 0
     aa0:	9a 01       	movw	r18, r20
     aa2:	ab 01       	movw	r20, r22
     aa4:	28 2b       	or	r18, r24
     aa6:	39 2b       	or	r19, r25
     aa8:	4a 2b       	or	r20, r26
     aaa:	5b 2b       	or	r21, r27
     aac:	da 01       	movw	r26, r20
     aae:	c9 01       	movw	r24, r18
     ab0:	8f 77       	andi	r24, 0x7F	; 127
     ab2:	90 70       	andi	r25, 0x00	; 0
     ab4:	a0 70       	andi	r26, 0x00	; 0
     ab6:	b0 70       	andi	r27, 0x00	; 0
     ab8:	80 34       	cpi	r24, 0x40	; 64
     aba:	91 05       	cpc	r25, r1
     abc:	a1 05       	cpc	r26, r1
     abe:	b1 05       	cpc	r27, r1
     ac0:	39 f4       	brne	.+14     	; 0xad0 <__pack_f+0xee>
     ac2:	27 ff       	sbrs	r18, 7
     ac4:	09 c0       	rjmp	.+18     	; 0xad8 <__pack_f+0xf6>
     ac6:	20 5c       	subi	r18, 0xC0	; 192
     ac8:	3f 4f       	sbci	r19, 0xFF	; 255
     aca:	4f 4f       	sbci	r20, 0xFF	; 255
     acc:	5f 4f       	sbci	r21, 0xFF	; 255
     ace:	04 c0       	rjmp	.+8      	; 0xad8 <__pack_f+0xf6>
     ad0:	21 5c       	subi	r18, 0xC1	; 193
     ad2:	3f 4f       	sbci	r19, 0xFF	; 255
     ad4:	4f 4f       	sbci	r20, 0xFF	; 255
     ad6:	5f 4f       	sbci	r21, 0xFF	; 255
     ad8:	e0 e0       	ldi	r30, 0x00	; 0
     ada:	f0 e0       	ldi	r31, 0x00	; 0
     adc:	20 30       	cpi	r18, 0x00	; 0
     ade:	a0 e0       	ldi	r26, 0x00	; 0
     ae0:	3a 07       	cpc	r19, r26
     ae2:	a0 e0       	ldi	r26, 0x00	; 0
     ae4:	4a 07       	cpc	r20, r26
     ae6:	a0 e4       	ldi	r26, 0x40	; 64
     ae8:	5a 07       	cpc	r21, r26
     aea:	10 f0       	brcs	.+4      	; 0xaf0 <__pack_f+0x10e>
     aec:	e1 e0       	ldi	r30, 0x01	; 1
     aee:	f0 e0       	ldi	r31, 0x00	; 0
     af0:	79 01       	movw	r14, r18
     af2:	8a 01       	movw	r16, r20
     af4:	27 c0       	rjmp	.+78     	; 0xb44 <__pack_f+0x162>
     af6:	60 38       	cpi	r22, 0x80	; 128
     af8:	71 05       	cpc	r23, r1
     afa:	64 f5       	brge	.+88     	; 0xb54 <__pack_f+0x172>
     afc:	fb 01       	movw	r30, r22
     afe:	e1 58       	subi	r30, 0x81	; 129
     b00:	ff 4f       	sbci	r31, 0xFF	; 255
     b02:	d8 01       	movw	r26, r16
     b04:	c7 01       	movw	r24, r14
     b06:	8f 77       	andi	r24, 0x7F	; 127
     b08:	90 70       	andi	r25, 0x00	; 0
     b0a:	a0 70       	andi	r26, 0x00	; 0
     b0c:	b0 70       	andi	r27, 0x00	; 0
     b0e:	80 34       	cpi	r24, 0x40	; 64
     b10:	91 05       	cpc	r25, r1
     b12:	a1 05       	cpc	r26, r1
     b14:	b1 05       	cpc	r27, r1
     b16:	39 f4       	brne	.+14     	; 0xb26 <__pack_f+0x144>
     b18:	e7 fe       	sbrs	r14, 7
     b1a:	0d c0       	rjmp	.+26     	; 0xb36 <__pack_f+0x154>
     b1c:	80 e4       	ldi	r24, 0x40	; 64
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	a0 e0       	ldi	r26, 0x00	; 0
     b22:	b0 e0       	ldi	r27, 0x00	; 0
     b24:	04 c0       	rjmp	.+8      	; 0xb2e <__pack_f+0x14c>
     b26:	8f e3       	ldi	r24, 0x3F	; 63
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	a0 e0       	ldi	r26, 0x00	; 0
     b2c:	b0 e0       	ldi	r27, 0x00	; 0
     b2e:	e8 0e       	add	r14, r24
     b30:	f9 1e       	adc	r15, r25
     b32:	0a 1f       	adc	r16, r26
     b34:	1b 1f       	adc	r17, r27
     b36:	17 ff       	sbrs	r17, 7
     b38:	05 c0       	rjmp	.+10     	; 0xb44 <__pack_f+0x162>
     b3a:	16 95       	lsr	r17
     b3c:	07 95       	ror	r16
     b3e:	f7 94       	ror	r15
     b40:	e7 94       	ror	r14
     b42:	31 96       	adiw	r30, 0x01	; 1
     b44:	87 e0       	ldi	r24, 0x07	; 7
     b46:	16 95       	lsr	r17
     b48:	07 95       	ror	r16
     b4a:	f7 94       	ror	r15
     b4c:	e7 94       	ror	r14
     b4e:	8a 95       	dec	r24
     b50:	d1 f7       	brne	.-12     	; 0xb46 <__pack_f+0x164>
     b52:	05 c0       	rjmp	.+10     	; 0xb5e <__pack_f+0x17c>
     b54:	ee 24       	eor	r14, r14
     b56:	ff 24       	eor	r15, r15
     b58:	87 01       	movw	r16, r14
     b5a:	ef ef       	ldi	r30, 0xFF	; 255
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	6e 2f       	mov	r22, r30
     b60:	67 95       	ror	r22
     b62:	66 27       	eor	r22, r22
     b64:	67 95       	ror	r22
     b66:	90 2f       	mov	r25, r16
     b68:	9f 77       	andi	r25, 0x7F	; 127
     b6a:	d7 94       	ror	r13
     b6c:	dd 24       	eor	r13, r13
     b6e:	d7 94       	ror	r13
     b70:	8e 2f       	mov	r24, r30
     b72:	86 95       	lsr	r24
     b74:	49 2f       	mov	r20, r25
     b76:	46 2b       	or	r20, r22
     b78:	58 2f       	mov	r21, r24
     b7a:	5d 29       	or	r21, r13
     b7c:	b7 01       	movw	r22, r14
     b7e:	ca 01       	movw	r24, r20
     b80:	1f 91       	pop	r17
     b82:	0f 91       	pop	r16
     b84:	ff 90       	pop	r15
     b86:	ef 90       	pop	r14
     b88:	df 90       	pop	r13
     b8a:	08 95       	ret

00000b8c <__unpack_f>:
     b8c:	fc 01       	movw	r30, r24
     b8e:	db 01       	movw	r26, r22
     b90:	40 81       	ld	r20, Z
     b92:	51 81       	ldd	r21, Z+1	; 0x01
     b94:	22 81       	ldd	r18, Z+2	; 0x02
     b96:	62 2f       	mov	r22, r18
     b98:	6f 77       	andi	r22, 0x7F	; 127
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	22 1f       	adc	r18, r18
     b9e:	22 27       	eor	r18, r18
     ba0:	22 1f       	adc	r18, r18
     ba2:	93 81       	ldd	r25, Z+3	; 0x03
     ba4:	89 2f       	mov	r24, r25
     ba6:	88 0f       	add	r24, r24
     ba8:	82 2b       	or	r24, r18
     baa:	28 2f       	mov	r18, r24
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	99 1f       	adc	r25, r25
     bb0:	99 27       	eor	r25, r25
     bb2:	99 1f       	adc	r25, r25
     bb4:	11 96       	adiw	r26, 0x01	; 1
     bb6:	9c 93       	st	X, r25
     bb8:	11 97       	sbiw	r26, 0x01	; 1
     bba:	21 15       	cp	r18, r1
     bbc:	31 05       	cpc	r19, r1
     bbe:	a9 f5       	brne	.+106    	; 0xc2a <__unpack_f+0x9e>
     bc0:	41 15       	cp	r20, r1
     bc2:	51 05       	cpc	r21, r1
     bc4:	61 05       	cpc	r22, r1
     bc6:	71 05       	cpc	r23, r1
     bc8:	11 f4       	brne	.+4      	; 0xbce <__unpack_f+0x42>
     bca:	82 e0       	ldi	r24, 0x02	; 2
     bcc:	37 c0       	rjmp	.+110    	; 0xc3c <__unpack_f+0xb0>
     bce:	82 e8       	ldi	r24, 0x82	; 130
     bd0:	9f ef       	ldi	r25, 0xFF	; 255
     bd2:	13 96       	adiw	r26, 0x03	; 3
     bd4:	9c 93       	st	X, r25
     bd6:	8e 93       	st	-X, r24
     bd8:	12 97       	sbiw	r26, 0x02	; 2
     bda:	9a 01       	movw	r18, r20
     bdc:	ab 01       	movw	r20, r22
     bde:	67 e0       	ldi	r22, 0x07	; 7
     be0:	22 0f       	add	r18, r18
     be2:	33 1f       	adc	r19, r19
     be4:	44 1f       	adc	r20, r20
     be6:	55 1f       	adc	r21, r21
     be8:	6a 95       	dec	r22
     bea:	d1 f7       	brne	.-12     	; 0xbe0 <__unpack_f+0x54>
     bec:	83 e0       	ldi	r24, 0x03	; 3
     bee:	8c 93       	st	X, r24
     bf0:	0d c0       	rjmp	.+26     	; 0xc0c <__unpack_f+0x80>
     bf2:	22 0f       	add	r18, r18
     bf4:	33 1f       	adc	r19, r19
     bf6:	44 1f       	adc	r20, r20
     bf8:	55 1f       	adc	r21, r21
     bfa:	12 96       	adiw	r26, 0x02	; 2
     bfc:	8d 91       	ld	r24, X+
     bfe:	9c 91       	ld	r25, X
     c00:	13 97       	sbiw	r26, 0x03	; 3
     c02:	01 97       	sbiw	r24, 0x01	; 1
     c04:	13 96       	adiw	r26, 0x03	; 3
     c06:	9c 93       	st	X, r25
     c08:	8e 93       	st	-X, r24
     c0a:	12 97       	sbiw	r26, 0x02	; 2
     c0c:	20 30       	cpi	r18, 0x00	; 0
     c0e:	80 e0       	ldi	r24, 0x00	; 0
     c10:	38 07       	cpc	r19, r24
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	48 07       	cpc	r20, r24
     c16:	80 e4       	ldi	r24, 0x40	; 64
     c18:	58 07       	cpc	r21, r24
     c1a:	58 f3       	brcs	.-42     	; 0xbf2 <__unpack_f+0x66>
     c1c:	14 96       	adiw	r26, 0x04	; 4
     c1e:	2d 93       	st	X+, r18
     c20:	3d 93       	st	X+, r19
     c22:	4d 93       	st	X+, r20
     c24:	5c 93       	st	X, r21
     c26:	17 97       	sbiw	r26, 0x07	; 7
     c28:	08 95       	ret
     c2a:	2f 3f       	cpi	r18, 0xFF	; 255
     c2c:	31 05       	cpc	r19, r1
     c2e:	79 f4       	brne	.+30     	; 0xc4e <__unpack_f+0xc2>
     c30:	41 15       	cp	r20, r1
     c32:	51 05       	cpc	r21, r1
     c34:	61 05       	cpc	r22, r1
     c36:	71 05       	cpc	r23, r1
     c38:	19 f4       	brne	.+6      	; 0xc40 <__unpack_f+0xb4>
     c3a:	84 e0       	ldi	r24, 0x04	; 4
     c3c:	8c 93       	st	X, r24
     c3e:	08 95       	ret
     c40:	64 ff       	sbrs	r22, 4
     c42:	03 c0       	rjmp	.+6      	; 0xc4a <__unpack_f+0xbe>
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	8c 93       	st	X, r24
     c48:	12 c0       	rjmp	.+36     	; 0xc6e <__unpack_f+0xe2>
     c4a:	1c 92       	st	X, r1
     c4c:	10 c0       	rjmp	.+32     	; 0xc6e <__unpack_f+0xe2>
     c4e:	2f 57       	subi	r18, 0x7F	; 127
     c50:	30 40       	sbci	r19, 0x00	; 0
     c52:	13 96       	adiw	r26, 0x03	; 3
     c54:	3c 93       	st	X, r19
     c56:	2e 93       	st	-X, r18
     c58:	12 97       	sbiw	r26, 0x02	; 2
     c5a:	83 e0       	ldi	r24, 0x03	; 3
     c5c:	8c 93       	st	X, r24
     c5e:	87 e0       	ldi	r24, 0x07	; 7
     c60:	44 0f       	add	r20, r20
     c62:	55 1f       	adc	r21, r21
     c64:	66 1f       	adc	r22, r22
     c66:	77 1f       	adc	r23, r23
     c68:	8a 95       	dec	r24
     c6a:	d1 f7       	brne	.-12     	; 0xc60 <__unpack_f+0xd4>
     c6c:	70 64       	ori	r23, 0x40	; 64
     c6e:	14 96       	adiw	r26, 0x04	; 4
     c70:	4d 93       	st	X+, r20
     c72:	5d 93       	st	X+, r21
     c74:	6d 93       	st	X+, r22
     c76:	7c 93       	st	X, r23
     c78:	17 97       	sbiw	r26, 0x07	; 7
     c7a:	08 95       	ret

00000c7c <__fpcmp_parts_f>:
     c7c:	1f 93       	push	r17
     c7e:	dc 01       	movw	r26, r24
     c80:	fb 01       	movw	r30, r22
     c82:	9c 91       	ld	r25, X
     c84:	92 30       	cpi	r25, 0x02	; 2
     c86:	08 f4       	brcc	.+2      	; 0xc8a <__fpcmp_parts_f+0xe>
     c88:	47 c0       	rjmp	.+142    	; 0xd18 <__fpcmp_parts_f+0x9c>
     c8a:	80 81       	ld	r24, Z
     c8c:	82 30       	cpi	r24, 0x02	; 2
     c8e:	08 f4       	brcc	.+2      	; 0xc92 <__fpcmp_parts_f+0x16>
     c90:	43 c0       	rjmp	.+134    	; 0xd18 <__fpcmp_parts_f+0x9c>
     c92:	94 30       	cpi	r25, 0x04	; 4
     c94:	51 f4       	brne	.+20     	; 0xcaa <__fpcmp_parts_f+0x2e>
     c96:	11 96       	adiw	r26, 0x01	; 1
     c98:	1c 91       	ld	r17, X
     c9a:	84 30       	cpi	r24, 0x04	; 4
     c9c:	99 f5       	brne	.+102    	; 0xd04 <__fpcmp_parts_f+0x88>
     c9e:	81 81       	ldd	r24, Z+1	; 0x01
     ca0:	68 2f       	mov	r22, r24
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	61 1b       	sub	r22, r17
     ca6:	71 09       	sbc	r23, r1
     ca8:	3f c0       	rjmp	.+126    	; 0xd28 <__fpcmp_parts_f+0xac>
     caa:	84 30       	cpi	r24, 0x04	; 4
     cac:	21 f0       	breq	.+8      	; 0xcb6 <__fpcmp_parts_f+0x3a>
     cae:	92 30       	cpi	r25, 0x02	; 2
     cb0:	31 f4       	brne	.+12     	; 0xcbe <__fpcmp_parts_f+0x42>
     cb2:	82 30       	cpi	r24, 0x02	; 2
     cb4:	b9 f1       	breq	.+110    	; 0xd24 <__fpcmp_parts_f+0xa8>
     cb6:	81 81       	ldd	r24, Z+1	; 0x01
     cb8:	88 23       	and	r24, r24
     cba:	89 f1       	breq	.+98     	; 0xd1e <__fpcmp_parts_f+0xa2>
     cbc:	2d c0       	rjmp	.+90     	; 0xd18 <__fpcmp_parts_f+0x9c>
     cbe:	11 96       	adiw	r26, 0x01	; 1
     cc0:	1c 91       	ld	r17, X
     cc2:	11 97       	sbiw	r26, 0x01	; 1
     cc4:	82 30       	cpi	r24, 0x02	; 2
     cc6:	f1 f0       	breq	.+60     	; 0xd04 <__fpcmp_parts_f+0x88>
     cc8:	81 81       	ldd	r24, Z+1	; 0x01
     cca:	18 17       	cp	r17, r24
     ccc:	d9 f4       	brne	.+54     	; 0xd04 <__fpcmp_parts_f+0x88>
     cce:	12 96       	adiw	r26, 0x02	; 2
     cd0:	2d 91       	ld	r18, X+
     cd2:	3c 91       	ld	r19, X
     cd4:	13 97       	sbiw	r26, 0x03	; 3
     cd6:	82 81       	ldd	r24, Z+2	; 0x02
     cd8:	93 81       	ldd	r25, Z+3	; 0x03
     cda:	82 17       	cp	r24, r18
     cdc:	93 07       	cpc	r25, r19
     cde:	94 f0       	brlt	.+36     	; 0xd04 <__fpcmp_parts_f+0x88>
     ce0:	28 17       	cp	r18, r24
     ce2:	39 07       	cpc	r19, r25
     ce4:	bc f0       	brlt	.+46     	; 0xd14 <__fpcmp_parts_f+0x98>
     ce6:	14 96       	adiw	r26, 0x04	; 4
     ce8:	8d 91       	ld	r24, X+
     cea:	9d 91       	ld	r25, X+
     cec:	0d 90       	ld	r0, X+
     cee:	bc 91       	ld	r27, X
     cf0:	a0 2d       	mov	r26, r0
     cf2:	24 81       	ldd	r18, Z+4	; 0x04
     cf4:	35 81       	ldd	r19, Z+5	; 0x05
     cf6:	46 81       	ldd	r20, Z+6	; 0x06
     cf8:	57 81       	ldd	r21, Z+7	; 0x07
     cfa:	28 17       	cp	r18, r24
     cfc:	39 07       	cpc	r19, r25
     cfe:	4a 07       	cpc	r20, r26
     d00:	5b 07       	cpc	r21, r27
     d02:	18 f4       	brcc	.+6      	; 0xd0a <__fpcmp_parts_f+0x8e>
     d04:	11 23       	and	r17, r17
     d06:	41 f0       	breq	.+16     	; 0xd18 <__fpcmp_parts_f+0x9c>
     d08:	0a c0       	rjmp	.+20     	; 0xd1e <__fpcmp_parts_f+0xa2>
     d0a:	82 17       	cp	r24, r18
     d0c:	93 07       	cpc	r25, r19
     d0e:	a4 07       	cpc	r26, r20
     d10:	b5 07       	cpc	r27, r21
     d12:	40 f4       	brcc	.+16     	; 0xd24 <__fpcmp_parts_f+0xa8>
     d14:	11 23       	and	r17, r17
     d16:	19 f0       	breq	.+6      	; 0xd1e <__fpcmp_parts_f+0xa2>
     d18:	61 e0       	ldi	r22, 0x01	; 1
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	05 c0       	rjmp	.+10     	; 0xd28 <__fpcmp_parts_f+0xac>
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	7f ef       	ldi	r23, 0xFF	; 255
     d22:	02 c0       	rjmp	.+4      	; 0xd28 <__fpcmp_parts_f+0xac>
     d24:	60 e0       	ldi	r22, 0x00	; 0
     d26:	70 e0       	ldi	r23, 0x00	; 0
     d28:	cb 01       	movw	r24, r22
     d2a:	1f 91       	pop	r17
     d2c:	08 95       	ret

00000d2e <EXTI_voidInt0init>:
/* Global Pointer to function to hold INT0 ISR Adress */
void (*EXTI_PvInt0Func)(void) = NULL ;


void EXTI_voidInt0init(void)
{
     d2e:	df 93       	push	r29
     d30:	cf 93       	push	r28
     d32:	cd b7       	in	r28, 0x3d	; 61
     d34:	de b7       	in	r29, 0x3e	; 62
#elif INT0_SENSE == ON_CHANGE
	SET_BIT(MCUCR,MCUCR_ISC00);
	CLR_BIT(MCUCR,MCUCR_ISC01);

#elif INT0_SENSE == FALLING_EDGE
	CLR_BIT(MCUCR,MCUCR_ISC00);
     d36:	a5 e5       	ldi	r26, 0x55	; 85
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	e5 e5       	ldi	r30, 0x55	; 85
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	80 81       	ld	r24, Z
     d40:	8e 7f       	andi	r24, 0xFE	; 254
     d42:	8c 93       	st	X, r24
	SET_BIT(MCUCR,MCUCR_ISC01);
     d44:	a5 e5       	ldi	r26, 0x55	; 85
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	e5 e5       	ldi	r30, 0x55	; 85
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	80 81       	ld	r24, Z
     d4e:	82 60       	ori	r24, 0x02	; 2
     d50:	8c 93       	st	X, r24
#else
#error "Wrong INT0_SENSE configuration option"
#endif
	/* Check prephiral interrupt enable inital state */
#if INT0_INITIAL_STATE == ENABLED
	SET_BIT(GICR,GICR_INT0);
     d52:	ab e5       	ldi	r26, 0x5B	; 91
     d54:	b0 e0       	ldi	r27, 0x00	; 0
     d56:	eb e5       	ldi	r30, 0x5B	; 91
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	80 81       	ld	r24, Z
     d5c:	80 64       	ori	r24, 0x40	; 64
     d5e:	8c 93       	st	X, r24

#else
#error "Wrong INT0_INITIAL_STATE input option"
#endif

}
     d60:	cf 91       	pop	r28
     d62:	df 91       	pop	r29
     d64:	08 95       	ret

00000d66 <EXTI_u8Init0SetSenseControl>:

u8 EXTI_u8Init0SetSenseControl(u8 Copy_u8Sense)
{
     d66:	df 93       	push	r29
     d68:	cf 93       	push	r28
     d6a:	00 d0       	rcall	.+0      	; 0xd6c <EXTI_u8Init0SetSenseControl+0x6>
     d6c:	0f 92       	push	r0
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	89 83       	std	Y+1, r24	; 0x01

	switch(Copy_u8Sense)
     d74:	89 81       	ldd	r24, Y+1	; 0x01
     d76:	28 2f       	mov	r18, r24
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	3b 83       	std	Y+3, r19	; 0x03
     d7c:	2a 83       	std	Y+2, r18	; 0x02
     d7e:	8a 81       	ldd	r24, Y+2	; 0x02
     d80:	9b 81       	ldd	r25, Y+3	; 0x03
     d82:	82 30       	cpi	r24, 0x02	; 2
     d84:	91 05       	cpc	r25, r1
     d86:	29 f1       	breq	.+74     	; 0xdd2 <EXTI_u8Init0SetSenseControl+0x6c>
     d88:	2a 81       	ldd	r18, Y+2	; 0x02
     d8a:	3b 81       	ldd	r19, Y+3	; 0x03
     d8c:	23 30       	cpi	r18, 0x03	; 3
     d8e:	31 05       	cpc	r19, r1
     d90:	34 f4       	brge	.+12     	; 0xd9e <EXTI_u8Init0SetSenseControl+0x38>
     d92:	8a 81       	ldd	r24, Y+2	; 0x02
     d94:	9b 81       	ldd	r25, Y+3	; 0x03
     d96:	81 30       	cpi	r24, 0x01	; 1
     d98:	91 05       	cpc	r25, r1
     d9a:	61 f0       	breq	.+24     	; 0xdb4 <EXTI_u8Init0SetSenseControl+0x4e>
     d9c:	46 c0       	rjmp	.+140    	; 0xe2a <EXTI_u8Init0SetSenseControl+0xc4>
     d9e:	2a 81       	ldd	r18, Y+2	; 0x02
     da0:	3b 81       	ldd	r19, Y+3	; 0x03
     da2:	23 30       	cpi	r18, 0x03	; 3
     da4:	31 05       	cpc	r19, r1
     da6:	21 f1       	breq	.+72     	; 0xdf0 <EXTI_u8Init0SetSenseControl+0x8a>
     da8:	8a 81       	ldd	r24, Y+2	; 0x02
     daa:	9b 81       	ldd	r25, Y+3	; 0x03
     dac:	84 30       	cpi	r24, 0x04	; 4
     dae:	91 05       	cpc	r25, r1
     db0:	71 f1       	breq	.+92     	; 0xe0e <EXTI_u8Init0SetSenseControl+0xa8>
     db2:	3b c0       	rjmp	.+118    	; 0xe2a <EXTI_u8Init0SetSenseControl+0xc4>
	{
	case LOW_LEVEL :
		CLR_BIT(MCUCR,MCUCR_ISC00);
     db4:	a5 e5       	ldi	r26, 0x55	; 85
     db6:	b0 e0       	ldi	r27, 0x00	; 0
     db8:	e5 e5       	ldi	r30, 0x55	; 85
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	80 81       	ld	r24, Z
     dbe:	8e 7f       	andi	r24, 0xFE	; 254
     dc0:	8c 93       	st	X, r24
		CLR_BIT(MCUCR,MCUCR_ISC01);
     dc2:	a5 e5       	ldi	r26, 0x55	; 85
     dc4:	b0 e0       	ldi	r27, 0x00	; 0
     dc6:	e5 e5       	ldi	r30, 0x55	; 85
     dc8:	f0 e0       	ldi	r31, 0x00	; 0
     dca:	80 81       	ld	r24, Z
     dcc:	8d 7f       	andi	r24, 0xFD	; 253
     dce:	8c 93       	st	X, r24
     dd0:	2c c0       	rjmp	.+88     	; 0xe2a <EXTI_u8Init0SetSenseControl+0xc4>
		break;
	case ON_CHANGE :
		SET_BIT(MCUCR,MCUCR_ISC00);
     dd2:	a5 e5       	ldi	r26, 0x55	; 85
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	e5 e5       	ldi	r30, 0x55	; 85
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	80 81       	ld	r24, Z
     ddc:	81 60       	ori	r24, 0x01	; 1
     dde:	8c 93       	st	X, r24
		CLR_BIT(MCUCR,MCUCR_ISC01);
     de0:	a5 e5       	ldi	r26, 0x55	; 85
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	e5 e5       	ldi	r30, 0x55	; 85
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	80 81       	ld	r24, Z
     dea:	8d 7f       	andi	r24, 0xFD	; 253
     dec:	8c 93       	st	X, r24
     dee:	1d c0       	rjmp	.+58     	; 0xe2a <EXTI_u8Init0SetSenseControl+0xc4>
		break;
	case FALLING_EDGE :
		CLR_BIT(MCUCR,MCUCR_ISC00);
     df0:	a5 e5       	ldi	r26, 0x55	; 85
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e5 e5       	ldi	r30, 0x55	; 85
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	8e 7f       	andi	r24, 0xFE	; 254
     dfc:	8c 93       	st	X, r24
		SET_BIT(MCUCR,MCUCR_ISC01);
     dfe:	a5 e5       	ldi	r26, 0x55	; 85
     e00:	b0 e0       	ldi	r27, 0x00	; 0
     e02:	e5 e5       	ldi	r30, 0x55	; 85
     e04:	f0 e0       	ldi	r31, 0x00	; 0
     e06:	80 81       	ld	r24, Z
     e08:	82 60       	ori	r24, 0x02	; 2
     e0a:	8c 93       	st	X, r24
     e0c:	0e c0       	rjmp	.+28     	; 0xe2a <EXTI_u8Init0SetSenseControl+0xc4>
		break;
	case RISING_EDGE :
		SET_BIT(MCUCR,MCUCR_ISC00);
     e0e:	a5 e5       	ldi	r26, 0x55	; 85
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	e5 e5       	ldi	r30, 0x55	; 85
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	81 60       	ori	r24, 0x01	; 1
     e1a:	8c 93       	st	X, r24
		SET_BIT(MCUCR,MCUCR_ISC01);
     e1c:	a5 e5       	ldi	r26, 0x55	; 85
     e1e:	b0 e0       	ldi	r27, 0x00	; 0
     e20:	e5 e5       	ldi	r30, 0x55	; 85
     e22:	f0 e0       	ldi	r31, 0x00	; 0
     e24:	80 81       	ld	r24, Z
     e26:	82 60       	ori	r24, 0x02	; 2
     e28:	8c 93       	st	X, r24
		break;
	default : break;
	}
	return 0;
     e2a:	80 e0       	ldi	r24, 0x00	; 0
}
     e2c:	0f 90       	pop	r0
     e2e:	0f 90       	pop	r0
     e30:	0f 90       	pop	r0
     e32:	cf 91       	pop	r28
     e34:	df 91       	pop	r29
     e36:	08 95       	ret

00000e38 <EXTI_u8Int0SetCallBack>:

u8 EXTI_u8Int0SetCallBack(void (*Copy_PvInt0Func)(void))
{
     e38:	df 93       	push	r29
     e3a:	cf 93       	push	r28
     e3c:	00 d0       	rcall	.+0      	; 0xe3e <EXTI_u8Int0SetCallBack+0x6>
     e3e:	0f 92       	push	r0
     e40:	cd b7       	in	r28, 0x3d	; 61
     e42:	de b7       	in	r29, 0x3e	; 62
     e44:	9b 83       	std	Y+3, r25	; 0x03
     e46:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8ErrorState = 0;
     e48:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_PvInt0Func != NULL)
     e4a:	8a 81       	ldd	r24, Y+2	; 0x02
     e4c:	9b 81       	ldd	r25, Y+3	; 0x03
     e4e:	00 97       	sbiw	r24, 0x00	; 0
     e50:	39 f0       	breq	.+14     	; 0xe60 <EXTI_u8Int0SetCallBack+0x28>
	{
		EXTI_PvInt0Func = Copy_PvInt0Func;
     e52:	8a 81       	ldd	r24, Y+2	; 0x02
     e54:	9b 81       	ldd	r25, Y+3	; 0x03
     e56:	90 93 71 01 	sts	0x0171, r25
     e5a:	80 93 70 01 	sts	0x0170, r24
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <EXTI_u8Int0SetCallBack+0x2c>
	}
	else
	{
		Local_u8ErrorState = 1;
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_u8ErrorState;
     e64:	89 81       	ldd	r24, Y+1	; 0x01

}
     e66:	0f 90       	pop	r0
     e68:	0f 90       	pop	r0
     e6a:	0f 90       	pop	r0
     e6c:	cf 91       	pop	r28
     e6e:	df 91       	pop	r29
     e70:	08 95       	ret

00000e72 <__vector_1>:

/* ISR of INT0 */
void __vector_1 (void) __attribute__((signal));
void __vector_1 (void)
{
     e72:	1f 92       	push	r1
     e74:	0f 92       	push	r0
     e76:	0f b6       	in	r0, 0x3f	; 63
     e78:	0f 92       	push	r0
     e7a:	11 24       	eor	r1, r1
     e7c:	2f 93       	push	r18
     e7e:	3f 93       	push	r19
     e80:	4f 93       	push	r20
     e82:	5f 93       	push	r21
     e84:	6f 93       	push	r22
     e86:	7f 93       	push	r23
     e88:	8f 93       	push	r24
     e8a:	9f 93       	push	r25
     e8c:	af 93       	push	r26
     e8e:	bf 93       	push	r27
     e90:	ef 93       	push	r30
     e92:	ff 93       	push	r31
     e94:	df 93       	push	r29
     e96:	cf 93       	push	r28
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
	if (EXTI_PvInt0Func != NULL)
     e9c:	80 91 70 01 	lds	r24, 0x0170
     ea0:	90 91 71 01 	lds	r25, 0x0171
     ea4:	00 97       	sbiw	r24, 0x00	; 0
     ea6:	29 f0       	breq	.+10     	; 0xeb2 <__vector_1+0x40>
	{
		EXTI_PvInt0Func();
     ea8:	e0 91 70 01 	lds	r30, 0x0170
     eac:	f0 91 71 01 	lds	r31, 0x0171
     eb0:	09 95       	icall
	}
	else
	{
		/* Do nothing   */
	}
}
     eb2:	cf 91       	pop	r28
     eb4:	df 91       	pop	r29
     eb6:	ff 91       	pop	r31
     eb8:	ef 91       	pop	r30
     eba:	bf 91       	pop	r27
     ebc:	af 91       	pop	r26
     ebe:	9f 91       	pop	r25
     ec0:	8f 91       	pop	r24
     ec2:	7f 91       	pop	r23
     ec4:	6f 91       	pop	r22
     ec6:	5f 91       	pop	r21
     ec8:	4f 91       	pop	r20
     eca:	3f 91       	pop	r19
     ecc:	2f 91       	pop	r18
     ece:	0f 90       	pop	r0
     ed0:	0f be       	out	0x3f, r0	; 63
     ed2:	0f 90       	pop	r0
     ed4:	1f 90       	pop	r1
     ed6:	18 95       	reti

00000ed8 <GIE_voidEnable>:

#include "GIE_interface.h"
#include "GIE_private.h"

void GIE_voidEnable(void)
{
     ed8:	df 93       	push	r29
     eda:	cf 93       	push	r28
     edc:	cd b7       	in	r28, 0x3d	; 61
     ede:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,7);
     ee0:	af e5       	ldi	r26, 0x5F	; 95
     ee2:	b0 e0       	ldi	r27, 0x00	; 0
     ee4:	ef e5       	ldi	r30, 0x5F	; 95
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	80 81       	ld	r24, Z
     eea:	80 68       	ori	r24, 0x80	; 128
     eec:	8c 93       	st	X, r24

}
     eee:	cf 91       	pop	r28
     ef0:	df 91       	pop	r29
     ef2:	08 95       	ret

00000ef4 <GIE_voidDisable>:
void GIE_voidDisable(void)
{
     ef4:	df 93       	push	r29
     ef6:	cf 93       	push	r28
     ef8:	cd b7       	in	r28, 0x3d	; 61
     efa:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,7);
     efc:	af e5       	ldi	r26, 0x5F	; 95
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	ef e5       	ldi	r30, 0x5F	; 95
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	80 81       	ld	r24, Z
     f06:	8f 77       	andi	r24, 0x7F	; 127
     f08:	8c 93       	st	X, r24

}
     f0a:	cf 91       	pop	r28
     f0c:	df 91       	pop	r29
     f0e:	08 95       	ret

00000f10 <TMR_voidTMR0Init>:
static unsigned char timer0_fract = 0;



void TMR_voidTMR0Init(void)
{
     f10:	df 93       	push	r29
     f12:	cf 93       	push	r28
     f14:	cd b7       	in	r28, 0x3d	; 61
     f16:	de b7       	in	r29, 0x3e	; 62
	// Select mode => CTC mode
	CLR_BIT(TMR_u8_TCCR0,6);
     f18:	a3 e5       	ldi	r26, 0x53	; 83
     f1a:	b0 e0       	ldi	r27, 0x00	; 0
     f1c:	e3 e5       	ldi	r30, 0x53	; 83
     f1e:	f0 e0       	ldi	r31, 0x00	; 0
     f20:	80 81       	ld	r24, Z
     f22:	8f 7b       	andi	r24, 0xBF	; 191
     f24:	8c 93       	st	X, r24
	SET_BIT(TMR_u8_TCCR0,3);
     f26:	a3 e5       	ldi	r26, 0x53	; 83
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	e3 e5       	ldi	r30, 0x53	; 83
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	80 81       	ld	r24, Z
     f30:	88 60       	ori	r24, 0x08	; 8
     f32:	8c 93       	st	X, r24
	// Enable OVF Interrupt
	SET_BIT(TMR_u8_TIMSK,0);
     f34:	a9 e5       	ldi	r26, 0x59	; 89
     f36:	b0 e0       	ldi	r27, 0x00	; 0
     f38:	e9 e5       	ldi	r30, 0x59	; 89
     f3a:	f0 e0       	ldi	r31, 0x00	; 0
     f3c:	80 81       	ld	r24, Z
     f3e:	81 60       	ori	r24, 0x01	; 1
     f40:	8c 93       	st	X, r24
	// Set preload value
	//TMR_u8_TCNT0 = 192;
	// Set prescaler value clk / 64
	CLR_BIT(TMR_u8_TCCR0,2);
     f42:	a3 e5       	ldi	r26, 0x53	; 83
     f44:	b0 e0       	ldi	r27, 0x00	; 0
     f46:	e3 e5       	ldi	r30, 0x53	; 83
     f48:	f0 e0       	ldi	r31, 0x00	; 0
     f4a:	80 81       	ld	r24, Z
     f4c:	8b 7f       	andi	r24, 0xFB	; 251
     f4e:	8c 93       	st	X, r24
	SET_BIT(TMR_u8_TCCR0,1);
     f50:	a3 e5       	ldi	r26, 0x53	; 83
     f52:	b0 e0       	ldi	r27, 0x00	; 0
     f54:	e3 e5       	ldi	r30, 0x53	; 83
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	80 81       	ld	r24, Z
     f5a:	82 60       	ori	r24, 0x02	; 2
     f5c:	8c 93       	st	X, r24
	SET_BIT(TMR_u8_TCCR0,0);
     f5e:	a3 e5       	ldi	r26, 0x53	; 83
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e3 e5       	ldi	r30, 0x53	; 83
     f64:	f0 e0       	ldi	r31, 0x00	; 0
     f66:	80 81       	ld	r24, Z
     f68:	81 60       	ori	r24, 0x01	; 1
     f6a:	8c 93       	st	X, r24
	
}
     f6c:	cf 91       	pop	r28
     f6e:	df 91       	pop	r29
     f70:	08 95       	ret

00000f72 <__vector_11>:
// prototype of ovf ISR

//void __vector_11(void)	__attribute__((signal));
//void __vector_11(void)
ISR(TIMER0_OVF_vect)
{
     f72:	1f 92       	push	r1
     f74:	0f 92       	push	r0
     f76:	0f b6       	in	r0, 0x3f	; 63
     f78:	0f 92       	push	r0
     f7a:	11 24       	eor	r1, r1
     f7c:	8f 93       	push	r24
     f7e:	9f 93       	push	r25
     f80:	af 93       	push	r26
     f82:	bf 93       	push	r27
     f84:	df 93       	push	r29
     f86:	cf 93       	push	r28
     f88:	00 d0       	rcall	.+0      	; 0xf8a <__vector_11+0x18>
     f8a:	00 d0       	rcall	.+0      	; 0xf8c <__vector_11+0x1a>
     f8c:	0f 92       	push	r0
     f8e:	cd b7       	in	r28, 0x3d	; 61
     f90:	de b7       	in	r29, 0x3e	; 62
		Local_u32Counter++;
	}
	*/
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
     f92:	80 91 76 01 	lds	r24, 0x0176
     f96:	90 91 77 01 	lds	r25, 0x0177
     f9a:	a0 91 78 01 	lds	r26, 0x0178
     f9e:	b0 91 79 01 	lds	r27, 0x0179
     fa2:	8a 83       	std	Y+2, r24	; 0x02
     fa4:	9b 83       	std	Y+3, r25	; 0x03
     fa6:	ac 83       	std	Y+4, r26	; 0x04
     fa8:	bd 83       	std	Y+5, r27	; 0x05
	unsigned char f = timer0_fract;
     faa:	80 91 7a 01 	lds	r24, 0x017A
     fae:	89 83       	std	Y+1, r24	; 0x01

	m += MILLIS_INC;
     fb0:	8a 81       	ldd	r24, Y+2	; 0x02
     fb2:	9b 81       	ldd	r25, Y+3	; 0x03
     fb4:	ac 81       	ldd	r26, Y+4	; 0x04
     fb6:	bd 81       	ldd	r27, Y+5	; 0x05
     fb8:	02 96       	adiw	r24, 0x02	; 2
     fba:	a1 1d       	adc	r26, r1
     fbc:	b1 1d       	adc	r27, r1
     fbe:	8a 83       	std	Y+2, r24	; 0x02
     fc0:	9b 83       	std	Y+3, r25	; 0x03
     fc2:	ac 83       	std	Y+4, r26	; 0x04
     fc4:	bd 83       	std	Y+5, r27	; 0x05
	f += FRACT_INC;
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	8a 5f       	subi	r24, 0xFA	; 250
     fca:	89 83       	std	Y+1, r24	; 0x01
	if (f >= FRACT_MAX) {
     fcc:	89 81       	ldd	r24, Y+1	; 0x01
     fce:	8d 37       	cpi	r24, 0x7D	; 125
     fd0:	70 f0       	brcs	.+28     	; 0xfee <__vector_11+0x7c>
		f -= FRACT_MAX;
     fd2:	89 81       	ldd	r24, Y+1	; 0x01
     fd4:	8d 57       	subi	r24, 0x7D	; 125
     fd6:	89 83       	std	Y+1, r24	; 0x01
		m += 1;
     fd8:	8a 81       	ldd	r24, Y+2	; 0x02
     fda:	9b 81       	ldd	r25, Y+3	; 0x03
     fdc:	ac 81       	ldd	r26, Y+4	; 0x04
     fde:	bd 81       	ldd	r27, Y+5	; 0x05
     fe0:	01 96       	adiw	r24, 0x01	; 1
     fe2:	a1 1d       	adc	r26, r1
     fe4:	b1 1d       	adc	r27, r1
     fe6:	8a 83       	std	Y+2, r24	; 0x02
     fe8:	9b 83       	std	Y+3, r25	; 0x03
     fea:	ac 83       	std	Y+4, r26	; 0x04
     fec:	bd 83       	std	Y+5, r27	; 0x05
	}

	timer0_fract = f;
     fee:	89 81       	ldd	r24, Y+1	; 0x01
     ff0:	80 93 7a 01 	sts	0x017A, r24
	timer0_millis = m;
     ff4:	8a 81       	ldd	r24, Y+2	; 0x02
     ff6:	9b 81       	ldd	r25, Y+3	; 0x03
     ff8:	ac 81       	ldd	r26, Y+4	; 0x04
     ffa:	bd 81       	ldd	r27, Y+5	; 0x05
     ffc:	80 93 76 01 	sts	0x0176, r24
    1000:	90 93 77 01 	sts	0x0177, r25
    1004:	a0 93 78 01 	sts	0x0178, r26
    1008:	b0 93 79 01 	sts	0x0179, r27
	timer0_overflow_count++;
    100c:	80 91 72 01 	lds	r24, 0x0172
    1010:	90 91 73 01 	lds	r25, 0x0173
    1014:	a0 91 74 01 	lds	r26, 0x0174
    1018:	b0 91 75 01 	lds	r27, 0x0175
    101c:	01 96       	adiw	r24, 0x01	; 1
    101e:	a1 1d       	adc	r26, r1
    1020:	b1 1d       	adc	r27, r1
    1022:	80 93 72 01 	sts	0x0172, r24
    1026:	90 93 73 01 	sts	0x0173, r25
    102a:	a0 93 74 01 	sts	0x0174, r26
    102e:	b0 93 75 01 	sts	0x0175, r27
}
    1032:	0f 90       	pop	r0
    1034:	0f 90       	pop	r0
    1036:	0f 90       	pop	r0
    1038:	0f 90       	pop	r0
    103a:	0f 90       	pop	r0
    103c:	cf 91       	pop	r28
    103e:	df 91       	pop	r29
    1040:	bf 91       	pop	r27
    1042:	af 91       	pop	r26
    1044:	9f 91       	pop	r25
    1046:	8f 91       	pop	r24
    1048:	0f 90       	pop	r0
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	0f 90       	pop	r0
    104e:	1f 90       	pop	r1
    1050:	18 95       	reti

00001052 <millis>:

unsigned long millis()
{
    1052:	df 93       	push	r29
    1054:	cf 93       	push	r28
    1056:	00 d0       	rcall	.+0      	; 0x1058 <millis+0x6>
    1058:	00 d0       	rcall	.+0      	; 0x105a <millis+0x8>
    105a:	cd b7       	in	r28, 0x3d	; 61
    105c:	de b7       	in	r29, 0x3e	; 62
	//uint8_t oldSREG = SREG;

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	//cli();
	GIE_voidDisable();
    105e:	0e 94 7a 07 	call	0xef4	; 0xef4 <GIE_voidDisable>
	m = timer0_millis;
    1062:	80 91 76 01 	lds	r24, 0x0176
    1066:	90 91 77 01 	lds	r25, 0x0177
    106a:	a0 91 78 01 	lds	r26, 0x0178
    106e:	b0 91 79 01 	lds	r27, 0x0179
    1072:	89 83       	std	Y+1, r24	; 0x01
    1074:	9a 83       	std	Y+2, r25	; 0x02
    1076:	ab 83       	std	Y+3, r26	; 0x03
    1078:	bc 83       	std	Y+4, r27	; 0x04
	//SREG = oldSREG;
	GIE_voidEnable();
    107a:	0e 94 6c 07 	call	0xed8	; 0xed8 <GIE_voidEnable>
	
	return m;
    107e:	89 81       	ldd	r24, Y+1	; 0x01
    1080:	9a 81       	ldd	r25, Y+2	; 0x02
    1082:	ab 81       	ldd	r26, Y+3	; 0x03
    1084:	bc 81       	ldd	r27, Y+4	; 0x04
}
    1086:	bc 01       	movw	r22, r24
    1088:	cd 01       	movw	r24, r26
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	0f 90       	pop	r0
    1090:	0f 90       	pop	r0
    1092:	cf 91       	pop	r28
    1094:	df 91       	pop	r29
    1096:	08 95       	ret

00001098 <micros>:

unsigned long micros() 
{
    1098:	df 93       	push	r29
    109a:	cf 93       	push	r28
    109c:	00 d0       	rcall	.+0      	; 0x109e <micros+0x6>
    109e:	00 d0       	rcall	.+0      	; 0x10a0 <micros+0x8>
    10a0:	0f 92       	push	r0
    10a2:	cd b7       	in	r28, 0x3d	; 61
    10a4:	de b7       	in	r29, 0x3e	; 62
	unsigned long m;
	//uint8_t oldSREG = SREG, t;
	u8 t;
	//cli();
	
	GIE_voidDisable();
    10a6:	0e 94 7a 07 	call	0xef4	; 0xef4 <GIE_voidDisable>
	m = timer0_overflow_count;
    10aa:	80 91 72 01 	lds	r24, 0x0172
    10ae:	90 91 73 01 	lds	r25, 0x0173
    10b2:	a0 91 74 01 	lds	r26, 0x0174
    10b6:	b0 91 75 01 	lds	r27, 0x0175
    10ba:	8a 83       	std	Y+2, r24	; 0x02
    10bc:	9b 83       	std	Y+3, r25	; 0x03
    10be:	ac 83       	std	Y+4, r26	; 0x04
    10c0:	bd 83       	std	Y+5, r27	; 0x05

	t = TMR_u8_TCNT0;
    10c2:	e2 e5       	ldi	r30, 0x52	; 82
    10c4:	f0 e0       	ldi	r31, 0x00	; 0
    10c6:	80 81       	ld	r24, Z
    10c8:	89 83       	std	Y+1, r24	; 0x01


	if ((GET_BIT(TMR_u8_TIFR,0)) && (t < 255))
    10ca:	e8 e5       	ldi	r30, 0x58	; 88
    10cc:	f0 e0       	ldi	r31, 0x00	; 0
    10ce:	80 81       	ld	r24, Z
    10d0:	88 2f       	mov	r24, r24
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	81 70       	andi	r24, 0x01	; 1
    10d6:	90 70       	andi	r25, 0x00	; 0
    10d8:	88 23       	and	r24, r24
    10da:	71 f0       	breq	.+28     	; 0x10f8 <micros+0x60>
    10dc:	89 81       	ldd	r24, Y+1	; 0x01
    10de:	8f 3f       	cpi	r24, 0xFF	; 255
    10e0:	59 f0       	breq	.+22     	; 0x10f8 <micros+0x60>
		m++;
    10e2:	8a 81       	ldd	r24, Y+2	; 0x02
    10e4:	9b 81       	ldd	r25, Y+3	; 0x03
    10e6:	ac 81       	ldd	r26, Y+4	; 0x04
    10e8:	bd 81       	ldd	r27, Y+5	; 0x05
    10ea:	01 96       	adiw	r24, 0x01	; 1
    10ec:	a1 1d       	adc	r26, r1
    10ee:	b1 1d       	adc	r27, r1
    10f0:	8a 83       	std	Y+2, r24	; 0x02
    10f2:	9b 83       	std	Y+3, r25	; 0x03
    10f4:	ac 83       	std	Y+4, r26	; 0x04
    10f6:	bd 83       	std	Y+5, r27	; 0x05

	//SREG = oldSREG;
	GIE_voidEnable();
    10f8:	0e 94 6c 07 	call	0xed8	; 0xed8 <GIE_voidEnable>
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
    10fc:	8a 81       	ldd	r24, Y+2	; 0x02
    10fe:	9b 81       	ldd	r25, Y+3	; 0x03
    1100:	ac 81       	ldd	r26, Y+4	; 0x04
    1102:	bd 81       	ldd	r27, Y+5	; 0x05
    1104:	22 27       	eor	r18, r18
    1106:	38 2f       	mov	r19, r24
    1108:	49 2f       	mov	r20, r25
    110a:	5a 2f       	mov	r21, r26
    110c:	89 81       	ldd	r24, Y+1	; 0x01
    110e:	88 2f       	mov	r24, r24
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	a0 e0       	ldi	r26, 0x00	; 0
    1114:	b0 e0       	ldi	r27, 0x00	; 0
    1116:	82 0f       	add	r24, r18
    1118:	93 1f       	adc	r25, r19
    111a:	a4 1f       	adc	r26, r20
    111c:	b5 1f       	adc	r27, r21
    111e:	88 0f       	add	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	aa 1f       	adc	r26, r26
    1124:	bb 1f       	adc	r27, r27
    1126:	88 0f       	add	r24, r24
    1128:	99 1f       	adc	r25, r25
    112a:	aa 1f       	adc	r26, r26
    112c:	bb 1f       	adc	r27, r27
    112e:	88 0f       	add	r24, r24
    1130:	99 1f       	adc	r25, r25
    1132:	aa 1f       	adc	r26, r26
    1134:	bb 1f       	adc	r27, r27
}
    1136:	bc 01       	movw	r22, r24
    1138:	cd 01       	movw	r24, r26
    113a:	0f 90       	pop	r0
    113c:	0f 90       	pop	r0
    113e:	0f 90       	pop	r0
    1140:	0f 90       	pop	r0
    1142:	0f 90       	pop	r0
    1144:	cf 91       	pop	r28
    1146:	df 91       	pop	r29
    1148:	08 95       	ret

0000114a <main>:
float time_per_deg=0;             //Here we store the time it takes to make one degree rotation

void ISR(void);
//void Test(void);

int main(void) {
    114a:	ef 92       	push	r14
    114c:	ff 92       	push	r15
    114e:	0f 93       	push	r16
    1150:	1f 93       	push	r17
    1152:	df 93       	push	r29
    1154:	cf 93       	push	r28
    1156:	cd b7       	in	r28, 0x3d	; 61
    1158:	de b7       	in	r29, 0x3e	; 62
    115a:	29 97       	sbiw	r28, 0x09	; 9
    115c:	0f b6       	in	r0, 0x3f	; 63
    115e:	f8 94       	cli
    1160:	de bf       	out	0x3e, r29	; 62
    1162:	0f be       	out	0x3f, r0	; 63
    1164:	cd bf       	out	0x3d, r28	; 61

//  PCICR |= (1 << PCIE0);    //enable PCMSK0 scan
//  PCMSK0 |= (1 << PCINT5);  //Enable pin state interruption on pin D13
	GIE_voidEnable();
    1166:	0e 94 6c 07 	call	0xed8	; 0xed8 <GIE_voidEnable>
	EXTI_voidInt0init();
    116a:	0e 94 97 06 	call	0xd2e	; 0xd2e <EXTI_voidInt0init>
	EXTI_u8Int0SetCallBack(&ISR);
    116e:	8a e3       	ldi	r24, 0x3A	; 58
    1170:	9d e0       	ldi	r25, 0x0D	; 13
    1172:	0e 94 1c 07 	call	0xe38	; 0xe38 <EXTI_u8Int0SetCallBack>
	TMR_voidTMR0Init();
    1176:	0e 94 88 07 	call	0xf10	; 0xf10 <TMR_voidTMR0Init>
   * D12 = Green 8 LED
   */

//  DDRD |= 0b11111100;      //2 to 7 as output
//  DDRB |= 0b00011111;      //8 to 12 as output
  DDRB |= 0b11111111;
    117a:	e7 e3       	ldi	r30, 0x37	; 55
    117c:	f0 e0       	ldi	r31, 0x00	; 0
    117e:	e0 80       	ld	r14, Z
    1180:	e7 e3       	ldi	r30, 0x37	; 55
    1182:	f0 e0       	ldi	r31, 0x00	; 0
    1184:	8f ef       	ldi	r24, 0xFF	; 255
    1186:	80 83       	st	Z, r24
  DDRA |= 0b00000111;
    1188:	aa e3       	ldi	r26, 0x3A	; 58
    118a:	b0 e0       	ldi	r27, 0x00	; 0
    118c:	ea e3       	ldi	r30, 0x3A	; 58
    118e:	f0 e0       	ldi	r31, 0x00	; 0
    1190:	80 81       	ld	r24, Z
    1192:	87 60       	ori	r24, 0x07	; 7
    1194:	8c 93       	st	X, r24

//  DDRB &= 0b11011111;      //13 input
  DDRD &= 0x00;
    1196:	e1 e3       	ldi	r30, 0x31	; 49
    1198:	f0 e0       	ldi	r31, 0x00	; 0
    119a:	f0 80       	ld	r15, Z
    119c:	e1 e3       	ldi	r30, 0x31	; 49
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	10 82       	st	Z, r1

//  PORTD &= 0b00000011;     //2 to 7 LOW
//  PORTB &= 0b11100000;     //8 to 12 LOW
  PORTB &= 0b00000000;
    11a2:	e8 e3       	ldi	r30, 0x38	; 56
    11a4:	f0 e0       	ldi	r31, 0x00	; 0
    11a6:	00 81       	ld	r16, Z
    11a8:	e8 e3       	ldi	r30, 0x38	; 56
    11aa:	f0 e0       	ldi	r31, 0x00	; 0
    11ac:	10 82       	st	Z, r1
  PORTA &= 0b00000000;
    11ae:	eb e3       	ldi	r30, 0x3B	; 59
    11b0:	f0 e0       	ldi	r31, 0x00	; 0
    11b2:	10 81       	ld	r17, Z
    11b4:	eb e3       	ldi	r30, 0x3B	; 59
    11b6:	f0 e0       	ldi	r31, 0x00	; 0
    11b8:	10 82       	st	Z, r1
  PORTA |= 0b00000100;
    11ba:	ab e3       	ldi	r26, 0x3B	; 59
    11bc:	b0 e0       	ldi	r27, 0x00	; 0
    11be:	eb e3       	ldi	r30, 0x3B	; 59
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	80 81       	ld	r24, Z
    11c4:	84 60       	ori	r24, 0x04	; 4
    11c6:	8c 93       	st	X, r24
//  while(1);

  while(1)
  {
	  //Here we calculate seconds, minutes and hours
	   Real_time_millis = millis();
    11c8:	0e 94 29 08 	call	0x1052	; 0x1052 <millis>
    11cc:	dc 01       	movw	r26, r24
    11ce:	cb 01       	movw	r24, r22
    11d0:	80 93 7b 01 	sts	0x017B, r24
    11d4:	90 93 7c 01 	sts	0x017C, r25
    11d8:	a0 93 7d 01 	sts	0x017D, r26
    11dc:	b0 93 7e 01 	sts	0x017E, r27

	   if(Real_time_millis - Previous_real_time_millis >= 1000){
    11e0:	20 91 7b 01 	lds	r18, 0x017B
    11e4:	30 91 7c 01 	lds	r19, 0x017C
    11e8:	40 91 7d 01 	lds	r20, 0x017D
    11ec:	50 91 7e 01 	lds	r21, 0x017E
    11f0:	80 91 7f 01 	lds	r24, 0x017F
    11f4:	90 91 80 01 	lds	r25, 0x0180
    11f8:	a0 91 81 01 	lds	r26, 0x0181
    11fc:	b0 91 82 01 	lds	r27, 0x0182
    1200:	79 01       	movw	r14, r18
    1202:	8a 01       	movw	r16, r20
    1204:	e8 1a       	sub	r14, r24
    1206:	f9 0a       	sbc	r15, r25
    1208:	0a 0b       	sbc	r16, r26
    120a:	1b 0b       	sbc	r17, r27
    120c:	d8 01       	movw	r26, r16
    120e:	c7 01       	movw	r24, r14
    1210:	88 3e       	cpi	r24, 0xE8	; 232
    1212:	03 e0       	ldi	r16, 0x03	; 3
    1214:	90 07       	cpc	r25, r16
    1216:	00 e0       	ldi	r16, 0x00	; 0
    1218:	a0 07       	cpc	r26, r16
    121a:	00 e0       	ldi	r16, 0x00	; 0
    121c:	b0 07       	cpc	r27, r16
    121e:	08 f4       	brcc	.+2      	; 0x1222 <main+0xd8>
    1220:	9e c0       	rjmp	.+316    	; 0x135e <main+0x214>
	     Previous_real_time_millis += 1000;
    1222:	80 91 7f 01 	lds	r24, 0x017F
    1226:	90 91 80 01 	lds	r25, 0x0180
    122a:	a0 91 81 01 	lds	r26, 0x0181
    122e:	b0 91 82 01 	lds	r27, 0x0182
    1232:	88 51       	subi	r24, 0x18	; 24
    1234:	9c 4f       	sbci	r25, 0xFC	; 252
    1236:	af 4f       	sbci	r26, 0xFF	; 255
    1238:	bf 4f       	sbci	r27, 0xFF	; 255
    123a:	80 93 7f 01 	sts	0x017F, r24
    123e:	90 93 80 01 	sts	0x0180, r25
    1242:	a0 93 81 01 	sts	0x0181, r26
    1246:	b0 93 82 01 	sts	0x0182, r27

	     SEC=SEC+1;
    124a:	80 91 83 01 	lds	r24, 0x0183
    124e:	90 91 84 01 	lds	r25, 0x0184
    1252:	a0 91 85 01 	lds	r26, 0x0185
    1256:	b0 91 86 01 	lds	r27, 0x0186
    125a:	bc 01       	movw	r22, r24
    125c:	cd 01       	movw	r24, r26
    125e:	20 e0       	ldi	r18, 0x00	; 0
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	40 e8       	ldi	r20, 0x80	; 128
    1264:	5f e3       	ldi	r21, 0x3F	; 63
    1266:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    126a:	dc 01       	movw	r26, r24
    126c:	cb 01       	movw	r24, r22
    126e:	80 93 83 01 	sts	0x0183, r24
    1272:	90 93 84 01 	sts	0x0184, r25
    1276:	a0 93 85 01 	sts	0x0185, r26
    127a:	b0 93 86 01 	sts	0x0186, r27
	     if(SEC > 59)
    127e:	80 91 83 01 	lds	r24, 0x0183
    1282:	90 91 84 01 	lds	r25, 0x0184
    1286:	a0 91 85 01 	lds	r26, 0x0185
    128a:	b0 91 86 01 	lds	r27, 0x0186
    128e:	bc 01       	movw	r22, r24
    1290:	cd 01       	movw	r24, r26
    1292:	20 e0       	ldi	r18, 0x00	; 0
    1294:	30 e0       	ldi	r19, 0x00	; 0
    1296:	4c e6       	ldi	r20, 0x6C	; 108
    1298:	52 e4       	ldi	r21, 0x42	; 66
    129a:	0e 94 99 03 	call	0x732	; 0x732 <__gtsf2>
    129e:	18 16       	cp	r1, r24
    12a0:	34 f5       	brge	.+76     	; 0x12ee <main+0x1a4>
	     {
	       SEC=0;
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	a0 e0       	ldi	r26, 0x00	; 0
    12a8:	b0 e0       	ldi	r27, 0x00	; 0
    12aa:	80 93 83 01 	sts	0x0183, r24
    12ae:	90 93 84 01 	sts	0x0184, r25
    12b2:	a0 93 85 01 	sts	0x0185, r26
    12b6:	b0 93 86 01 	sts	0x0186, r27
	       MIN=MIN+1;
    12ba:	80 91 68 01 	lds	r24, 0x0168
    12be:	90 91 69 01 	lds	r25, 0x0169
    12c2:	a0 91 6a 01 	lds	r26, 0x016A
    12c6:	b0 91 6b 01 	lds	r27, 0x016B
    12ca:	bc 01       	movw	r22, r24
    12cc:	cd 01       	movw	r24, r26
    12ce:	20 e0       	ldi	r18, 0x00	; 0
    12d0:	30 e0       	ldi	r19, 0x00	; 0
    12d2:	40 e8       	ldi	r20, 0x80	; 128
    12d4:	5f e3       	ldi	r21, 0x3F	; 63
    12d6:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    12da:	dc 01       	movw	r26, r24
    12dc:	cb 01       	movw	r24, r22
    12de:	80 93 68 01 	sts	0x0168, r24
    12e2:	90 93 69 01 	sts	0x0169, r25
    12e6:	a0 93 6a 01 	sts	0x016A, r26
    12ea:	b0 93 6b 01 	sts	0x016B, r27
	     }

	     if(MIN > 59)
    12ee:	80 91 68 01 	lds	r24, 0x0168
    12f2:	90 91 69 01 	lds	r25, 0x0169
    12f6:	a0 91 6a 01 	lds	r26, 0x016A
    12fa:	b0 91 6b 01 	lds	r27, 0x016B
    12fe:	bc 01       	movw	r22, r24
    1300:	cd 01       	movw	r24, r26
    1302:	20 e0       	ldi	r18, 0x00	; 0
    1304:	30 e0       	ldi	r19, 0x00	; 0
    1306:	4c e6       	ldi	r20, 0x6C	; 108
    1308:	52 e4       	ldi	r21, 0x42	; 66
    130a:	0e 94 99 03 	call	0x732	; 0x732 <__gtsf2>
    130e:	18 16       	cp	r1, r24
    1310:	34 f5       	brge	.+76     	; 0x135e <main+0x214>
	     {
	       MIN = 0;
    1312:	80 e0       	ldi	r24, 0x00	; 0
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	a0 e0       	ldi	r26, 0x00	; 0
    1318:	b0 e0       	ldi	r27, 0x00	; 0
    131a:	80 93 68 01 	sts	0x0168, r24
    131e:	90 93 69 01 	sts	0x0169, r25
    1322:	a0 93 6a 01 	sts	0x016A, r26
    1326:	b0 93 6b 01 	sts	0x016B, r27
	       HOUR = HOUR+1;
    132a:	80 91 6c 01 	lds	r24, 0x016C
    132e:	90 91 6d 01 	lds	r25, 0x016D
    1332:	a0 91 6e 01 	lds	r26, 0x016E
    1336:	b0 91 6f 01 	lds	r27, 0x016F
    133a:	bc 01       	movw	r22, r24
    133c:	cd 01       	movw	r24, r26
    133e:	20 e0       	ldi	r18, 0x00	; 0
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	40 e8       	ldi	r20, 0x80	; 128
    1344:	5f e3       	ldi	r21, 0x3F	; 63
    1346:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    134a:	dc 01       	movw	r26, r24
    134c:	cb 01       	movw	r24, r22
    134e:	80 93 6c 01 	sts	0x016C, r24
    1352:	90 93 6d 01 	sts	0x016D, r25
    1356:	a0 93 6e 01 	sts	0x016E, r26
    135a:	b0 93 6f 01 	sts	0x016F, r27
	     }
	   }//End of real time count

	   //Here is our loop counter. elapsed_loop_counter will reset each loop and count the loop time
	   //When we reach the amount of time desired we turn ond or off the LEDs
	   currentMillis = micros();
    135e:	0e 94 4c 08 	call	0x1098	; 0x1098 <micros>
    1362:	dc 01       	movw	r26, r24
    1364:	cb 01       	movw	r24, r22
    1366:	80 93 9c 01 	sts	0x019C, r24
    136a:	90 93 9d 01 	sts	0x019D, r25
    136e:	a0 93 9e 01 	sts	0x019E, r26
    1372:	b0 93 9f 01 	sts	0x019F, r27
	   elapsed_loop_counter = currentMillis - previousMillis;
    1376:	20 91 9c 01 	lds	r18, 0x019C
    137a:	30 91 9d 01 	lds	r19, 0x019D
    137e:	40 91 9e 01 	lds	r20, 0x019E
    1382:	50 91 9f 01 	lds	r21, 0x019F
    1386:	80 91 a4 01 	lds	r24, 0x01A4
    138a:	90 91 a5 01 	lds	r25, 0x01A5
    138e:	a0 91 a6 01 	lds	r26, 0x01A6
    1392:	b0 91 a7 01 	lds	r27, 0x01A7
    1396:	79 01       	movw	r14, r18
    1398:	8a 01       	movw	r16, r20
    139a:	e8 1a       	sub	r14, r24
    139c:	f9 0a       	sbc	r15, r25
    139e:	0a 0b       	sbc	r16, r26
    13a0:	1b 0b       	sbc	r17, r27
    13a2:	d8 01       	movw	r26, r16
    13a4:	c7 01       	movw	r24, r14
    13a6:	80 93 98 01 	sts	0x0198, r24
    13aa:	90 93 99 01 	sts	0x0199, r25
    13ae:	a0 93 9a 01 	sts	0x019A, r26
    13b2:	b0 93 9b 01 	sts	0x019B, r27
//		   PORTB |= 0xFF;
//		   PORTA |= 0xFF;
//	   }

	  //Print the 4 red dots
	   if(elapsed_loop_counter >=  time_per_deg*(dots_marker) &&  elapsed_loop_counter <  time_per_deg*(dots_marker+3)    )
    13b6:	80 91 98 01 	lds	r24, 0x0198
    13ba:	90 91 99 01 	lds	r25, 0x0199
    13be:	a0 91 9a 01 	lds	r26, 0x019A
    13c2:	b0 91 9b 01 	lds	r27, 0x019B
    13c6:	bc 01       	movw	r22, r24
    13c8:	cd 01       	movw	r24, r26
    13ca:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    13ce:	7b 01       	movw	r14, r22
    13d0:	8c 01       	movw	r16, r24
    13d2:	80 91 90 01 	lds	r24, 0x0190
    13d6:	90 91 91 01 	lds	r25, 0x0191
    13da:	a0 91 92 01 	lds	r26, 0x0192
    13de:	b0 91 93 01 	lds	r27, 0x0193
    13e2:	20 91 87 01 	lds	r18, 0x0187
    13e6:	30 91 88 01 	lds	r19, 0x0188
    13ea:	40 91 89 01 	lds	r20, 0x0189
    13ee:	50 91 8a 01 	lds	r21, 0x018A
    13f2:	bc 01       	movw	r22, r24
    13f4:	cd 01       	movw	r24, r26
    13f6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	9c 01       	movw	r18, r24
    1400:	ad 01       	movw	r20, r26
    1402:	c8 01       	movw	r24, r16
    1404:	b7 01       	movw	r22, r14
    1406:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    140a:	88 23       	and	r24, r24
    140c:	0c f4       	brge	.+2      	; 0x1410 <main+0x2c6>
    140e:	3d c0       	rjmp	.+122    	; 0x148a <main+0x340>
    1410:	80 91 98 01 	lds	r24, 0x0198
    1414:	90 91 99 01 	lds	r25, 0x0199
    1418:	a0 91 9a 01 	lds	r26, 0x019A
    141c:	b0 91 9b 01 	lds	r27, 0x019B
    1420:	bc 01       	movw	r22, r24
    1422:	cd 01       	movw	r24, r26
    1424:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    1428:	7b 01       	movw	r14, r22
    142a:	8c 01       	movw	r16, r24
    142c:	80 91 87 01 	lds	r24, 0x0187
    1430:	90 91 88 01 	lds	r25, 0x0188
    1434:	a0 91 89 01 	lds	r26, 0x0189
    1438:	b0 91 8a 01 	lds	r27, 0x018A
    143c:	bc 01       	movw	r22, r24
    143e:	cd 01       	movw	r24, r26
    1440:	20 e0       	ldi	r18, 0x00	; 0
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	40 e4       	ldi	r20, 0x40	; 64
    1446:	50 e4       	ldi	r21, 0x40	; 64
    1448:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    144c:	dc 01       	movw	r26, r24
    144e:	cb 01       	movw	r24, r22
    1450:	20 91 90 01 	lds	r18, 0x0190
    1454:	30 91 91 01 	lds	r19, 0x0191
    1458:	40 91 92 01 	lds	r20, 0x0192
    145c:	50 91 93 01 	lds	r21, 0x0193
    1460:	bc 01       	movw	r22, r24
    1462:	cd 01       	movw	r24, r26
    1464:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1468:	dc 01       	movw	r26, r24
    146a:	cb 01       	movw	r24, r22
    146c:	9c 01       	movw	r18, r24
    146e:	ad 01       	movw	r20, r26
    1470:	c8 01       	movw	r24, r16
    1472:	b7 01       	movw	r22, r14
    1474:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__ltsf2>
    1478:	88 23       	and	r24, r24
    147a:	3c f4       	brge	.+14     	; 0x148a <main+0x340>
	   {
	     //PORTD |= 0b00011000; //3,4 HIGH
		   PORTA |= 0b00000011;
    147c:	ab e3       	ldi	r26, 0x3B	; 59
    147e:	b0 e0       	ldi	r27, 0x00	; 0
    1480:	eb e3       	ldi	r30, 0x3B	; 59
    1482:	f0 e0       	ldi	r31, 0x00	; 0
    1484:	80 81       	ld	r24, Z
    1486:	83 60       	ori	r24, 0x03	; 3
    1488:	8c 93       	st	X, r24
	   }

	   if(elapsed_loop_counter >= time_per_deg*(dots_marker+3))
    148a:	80 91 98 01 	lds	r24, 0x0198
    148e:	90 91 99 01 	lds	r25, 0x0199
    1492:	a0 91 9a 01 	lds	r26, 0x019A
    1496:	b0 91 9b 01 	lds	r27, 0x019B
    149a:	bc 01       	movw	r22, r24
    149c:	cd 01       	movw	r24, r26
    149e:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    14a2:	7b 01       	movw	r14, r22
    14a4:	8c 01       	movw	r16, r24
    14a6:	80 91 87 01 	lds	r24, 0x0187
    14aa:	90 91 88 01 	lds	r25, 0x0188
    14ae:	a0 91 89 01 	lds	r26, 0x0189
    14b2:	b0 91 8a 01 	lds	r27, 0x018A
    14b6:	bc 01       	movw	r22, r24
    14b8:	cd 01       	movw	r24, r26
    14ba:	20 e0       	ldi	r18, 0x00	; 0
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	40 e4       	ldi	r20, 0x40	; 64
    14c0:	50 e4       	ldi	r21, 0x40	; 64
    14c2:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    14c6:	dc 01       	movw	r26, r24
    14c8:	cb 01       	movw	r24, r22
    14ca:	20 91 90 01 	lds	r18, 0x0190
    14ce:	30 91 91 01 	lds	r19, 0x0191
    14d2:	40 91 92 01 	lds	r20, 0x0192
    14d6:	50 91 93 01 	lds	r21, 0x0193
    14da:	bc 01       	movw	r22, r24
    14dc:	cd 01       	movw	r24, r26
    14de:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    14e2:	dc 01       	movw	r26, r24
    14e4:	cb 01       	movw	r24, r22
    14e6:	9c 01       	movw	r18, r24
    14e8:	ad 01       	movw	r20, r26
    14ea:	c8 01       	movw	r24, r16
    14ec:	b7 01       	movw	r22, r14
    14ee:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    14f2:	88 23       	and	r24, r24
    14f4:	0c f4       	brge	.+2      	; 0x14f8 <main+0x3ae>
    14f6:	3f c0       	rjmp	.+126    	; 0x1576 <main+0x42c>
	   {
//	     PORTD &= 0b11100111;               //3, 4 LOW, the two red LEDs
		   PORTA &= 0b00000100;
    14f8:	ab e3       	ldi	r26, 0x3B	; 59
    14fa:	b0 e0       	ldi	r27, 0x00	; 0
    14fc:	eb e3       	ldi	r30, 0x3B	; 59
    14fe:	f0 e0       	ldi	r31, 0x00	; 0
    1500:	80 81       	ld	r24, Z
    1502:	84 70       	andi	r24, 0x04	; 4
    1504:	8c 93       	st	X, r24
	     dots_marker = dots_marker + 90;
    1506:	80 91 87 01 	lds	r24, 0x0187
    150a:	90 91 88 01 	lds	r25, 0x0188
    150e:	a0 91 89 01 	lds	r26, 0x0189
    1512:	b0 91 8a 01 	lds	r27, 0x018A
    1516:	bc 01       	movw	r22, r24
    1518:	cd 01       	movw	r24, r26
    151a:	20 e0       	ldi	r18, 0x00	; 0
    151c:	30 e0       	ldi	r19, 0x00	; 0
    151e:	44 eb       	ldi	r20, 0xB4	; 180
    1520:	52 e4       	ldi	r21, 0x42	; 66
    1522:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    1526:	dc 01       	movw	r26, r24
    1528:	cb 01       	movw	r24, r22
    152a:	80 93 87 01 	sts	0x0187, r24
    152e:	90 93 88 01 	sts	0x0188, r25
    1532:	a0 93 89 01 	sts	0x0189, r26
    1536:	b0 93 8a 01 	sts	0x018A, r27
	     if(dots_marker >= 360)
    153a:	80 91 87 01 	lds	r24, 0x0187
    153e:	90 91 88 01 	lds	r25, 0x0188
    1542:	a0 91 89 01 	lds	r26, 0x0189
    1546:	b0 91 8a 01 	lds	r27, 0x018A
    154a:	bc 01       	movw	r22, r24
    154c:	cd 01       	movw	r24, r26
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	44 eb       	ldi	r20, 0xB4	; 180
    1554:	53 e4       	ldi	r21, 0x43	; 67
    1556:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    155a:	88 23       	and	r24, r24
    155c:	64 f0       	brlt	.+24     	; 0x1576 <main+0x42c>
	     {
	       dots_marker = 0;
    155e:	80 e0       	ldi	r24, 0x00	; 0
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	a0 e0       	ldi	r26, 0x00	; 0
    1564:	b0 e0       	ldi	r27, 0x00	; 0
    1566:	80 93 87 01 	sts	0x0187, r24
    156a:	90 93 88 01 	sts	0x0188, r25
    156e:	a0 93 89 01 	sts	0x0189, r26
    1572:	b0 93 8a 01 	sts	0x018A, r27




	   //Print the second line
	   if(elapsed_loop_counter >=  time_per_deg*(SEC*6) &&  elapsed_loop_counter <  time_per_deg*((SEC*6)+2)    )
    1576:	80 91 98 01 	lds	r24, 0x0198
    157a:	90 91 99 01 	lds	r25, 0x0199
    157e:	a0 91 9a 01 	lds	r26, 0x019A
    1582:	b0 91 9b 01 	lds	r27, 0x019B
    1586:	bc 01       	movw	r22, r24
    1588:	cd 01       	movw	r24, r26
    158a:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    158e:	7b 01       	movw	r14, r22
    1590:	8c 01       	movw	r16, r24
    1592:	80 91 83 01 	lds	r24, 0x0183
    1596:	90 91 84 01 	lds	r25, 0x0184
    159a:	a0 91 85 01 	lds	r26, 0x0185
    159e:	b0 91 86 01 	lds	r27, 0x0186
    15a2:	bc 01       	movw	r22, r24
    15a4:	cd 01       	movw	r24, r26
    15a6:	20 e0       	ldi	r18, 0x00	; 0
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	40 ec       	ldi	r20, 0xC0	; 192
    15ac:	50 e4       	ldi	r21, 0x40	; 64
    15ae:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    15b2:	dc 01       	movw	r26, r24
    15b4:	cb 01       	movw	r24, r22
    15b6:	20 91 90 01 	lds	r18, 0x0190
    15ba:	30 91 91 01 	lds	r19, 0x0191
    15be:	40 91 92 01 	lds	r20, 0x0192
    15c2:	50 91 93 01 	lds	r21, 0x0193
    15c6:	bc 01       	movw	r22, r24
    15c8:	cd 01       	movw	r24, r26
    15ca:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    15ce:	dc 01       	movw	r26, r24
    15d0:	cb 01       	movw	r24, r22
    15d2:	9c 01       	movw	r18, r24
    15d4:	ad 01       	movw	r20, r26
    15d6:	c8 01       	movw	r24, r16
    15d8:	b7 01       	movw	r22, r14
    15da:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    15de:	88 23       	and	r24, r24
    15e0:	0c f4       	brge	.+2      	; 0x15e4 <main+0x49a>
    15e2:	4e c0       	rjmp	.+156    	; 0x1680 <main+0x536>
    15e4:	80 91 98 01 	lds	r24, 0x0198
    15e8:	90 91 99 01 	lds	r25, 0x0199
    15ec:	a0 91 9a 01 	lds	r26, 0x019A
    15f0:	b0 91 9b 01 	lds	r27, 0x019B
    15f4:	bc 01       	movw	r22, r24
    15f6:	cd 01       	movw	r24, r26
    15f8:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    15fc:	7b 01       	movw	r14, r22
    15fe:	8c 01       	movw	r16, r24
    1600:	80 91 83 01 	lds	r24, 0x0183
    1604:	90 91 84 01 	lds	r25, 0x0184
    1608:	a0 91 85 01 	lds	r26, 0x0185
    160c:	b0 91 86 01 	lds	r27, 0x0186
    1610:	bc 01       	movw	r22, r24
    1612:	cd 01       	movw	r24, r26
    1614:	20 e0       	ldi	r18, 0x00	; 0
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	40 ec       	ldi	r20, 0xC0	; 192
    161a:	50 e4       	ldi	r21, 0x40	; 64
    161c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	bc 01       	movw	r22, r24
    1626:	cd 01       	movw	r24, r26
    1628:	20 e0       	ldi	r18, 0x00	; 0
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	40 e0       	ldi	r20, 0x00	; 0
    162e:	50 e4       	ldi	r21, 0x40	; 64
    1630:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    1634:	dc 01       	movw	r26, r24
    1636:	cb 01       	movw	r24, r22
    1638:	20 91 90 01 	lds	r18, 0x0190
    163c:	30 91 91 01 	lds	r19, 0x0191
    1640:	40 91 92 01 	lds	r20, 0x0192
    1644:	50 91 93 01 	lds	r21, 0x0193
    1648:	bc 01       	movw	r22, r24
    164a:	cd 01       	movw	r24, r26
    164c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1650:	dc 01       	movw	r26, r24
    1652:	cb 01       	movw	r24, r22
    1654:	9c 01       	movw	r18, r24
    1656:	ad 01       	movw	r20, r26
    1658:	c8 01       	movw	r24, r16
    165a:	b7 01       	movw	r22, r14
    165c:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__ltsf2>
    1660:	88 23       	and	r24, r24
    1662:	74 f4       	brge	.+28     	; 0x1680 <main+0x536>
	   {
//	     PORTB |= 0b00011111; //8, 9, 10, 11 and 12 as HIGH
//	     PORTD |= 0b11100000; //2 (blue), 5, 6 and 7 as HIGH
		  PORTB |= 0xFF;
    1664:	e8 e3       	ldi	r30, 0x38	; 56
    1666:	f0 e0       	ldi	r31, 0x00	; 0
    1668:	f0 80       	ld	r15, Z
    166a:	e8 e3       	ldi	r30, 0x38	; 56
    166c:	f0 e0       	ldi	r31, 0x00	; 0
    166e:	8f ef       	ldi	r24, 0xFF	; 255
    1670:	80 83       	st	Z, r24
		  PORTA |= 0b00000100;
    1672:	ab e3       	ldi	r26, 0x3B	; 59
    1674:	b0 e0       	ldi	r27, 0x00	; 0
    1676:	eb e3       	ldi	r30, 0x3B	; 59
    1678:	f0 e0       	ldi	r31, 0x00	; 0
    167a:	80 81       	ld	r24, Z
    167c:	84 60       	ori	r24, 0x04	; 4
    167e:	8c 93       	st	X, r24
	   }

	   if(elapsed_loop_counter >= time_per_deg*((SEC*6)+2))
    1680:	80 91 98 01 	lds	r24, 0x0198
    1684:	90 91 99 01 	lds	r25, 0x0199
    1688:	a0 91 9a 01 	lds	r26, 0x019A
    168c:	b0 91 9b 01 	lds	r27, 0x019B
    1690:	bc 01       	movw	r22, r24
    1692:	cd 01       	movw	r24, r26
    1694:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    1698:	7b 01       	movw	r14, r22
    169a:	8c 01       	movw	r16, r24
    169c:	80 91 83 01 	lds	r24, 0x0183
    16a0:	90 91 84 01 	lds	r25, 0x0184
    16a4:	a0 91 85 01 	lds	r26, 0x0185
    16a8:	b0 91 86 01 	lds	r27, 0x0186
    16ac:	bc 01       	movw	r22, r24
    16ae:	cd 01       	movw	r24, r26
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	40 ec       	ldi	r20, 0xC0	; 192
    16b6:	50 e4       	ldi	r21, 0x40	; 64
    16b8:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	bc 01       	movw	r22, r24
    16c2:	cd 01       	movw	r24, r26
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	40 e0       	ldi	r20, 0x00	; 0
    16ca:	50 e4       	ldi	r21, 0x40	; 64
    16cc:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    16d0:	dc 01       	movw	r26, r24
    16d2:	cb 01       	movw	r24, r22
    16d4:	20 91 90 01 	lds	r18, 0x0190
    16d8:	30 91 91 01 	lds	r19, 0x0191
    16dc:	40 91 92 01 	lds	r20, 0x0192
    16e0:	50 91 93 01 	lds	r21, 0x0193
    16e4:	bc 01       	movw	r22, r24
    16e6:	cd 01       	movw	r24, r26
    16e8:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    16ec:	dc 01       	movw	r26, r24
    16ee:	cb 01       	movw	r24, r22
    16f0:	9c 01       	movw	r18, r24
    16f2:	ad 01       	movw	r20, r26
    16f4:	c8 01       	movw	r24, r16
    16f6:	b7 01       	movw	r22, r14
    16f8:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    16fc:	88 23       	and	r24, r24
    16fe:	6c f0       	brlt	.+26     	; 0x171a <main+0x5d0>
	   {
//	     PORTB &= 0b11100000;
//	     PORTD &= 0b00011111;
		  PORTB &= 0x00;
    1700:	e8 e3       	ldi	r30, 0x38	; 56
    1702:	f0 e0       	ldi	r31, 0x00	; 0
    1704:	00 81       	ld	r16, Z
    1706:	e8 e3       	ldi	r30, 0x38	; 56
    1708:	f0 e0       	ldi	r31, 0x00	; 0
    170a:	10 82       	st	Z, r1
		  PORTA &= 0b11111100;
    170c:	ab e3       	ldi	r26, 0x3B	; 59
    170e:	b0 e0       	ldi	r27, 0x00	; 0
    1710:	eb e3       	ldi	r30, 0x3B	; 59
    1712:	f0 e0       	ldi	r31, 0x00	; 0
    1714:	80 81       	ld	r24, Z
    1716:	8c 7f       	andi	r24, 0xFC	; 252
    1718:	8c 93       	st	X, r24




	    //Print the minute line
	   if(elapsed_loop_counter >=  time_per_deg*(MIN*6) &&  elapsed_loop_counter <  time_per_deg*((MIN*6)+1)    )
    171a:	80 91 98 01 	lds	r24, 0x0198
    171e:	90 91 99 01 	lds	r25, 0x0199
    1722:	a0 91 9a 01 	lds	r26, 0x019A
    1726:	b0 91 9b 01 	lds	r27, 0x019B
    172a:	bc 01       	movw	r22, r24
    172c:	cd 01       	movw	r24, r26
    172e:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    1732:	7b 01       	movw	r14, r22
    1734:	8c 01       	movw	r16, r24
    1736:	80 91 68 01 	lds	r24, 0x0168
    173a:	90 91 69 01 	lds	r25, 0x0169
    173e:	a0 91 6a 01 	lds	r26, 0x016A
    1742:	b0 91 6b 01 	lds	r27, 0x016B
    1746:	bc 01       	movw	r22, r24
    1748:	cd 01       	movw	r24, r26
    174a:	20 e0       	ldi	r18, 0x00	; 0
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	40 ec       	ldi	r20, 0xC0	; 192
    1750:	50 e4       	ldi	r21, 0x40	; 64
    1752:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1756:	dc 01       	movw	r26, r24
    1758:	cb 01       	movw	r24, r22
    175a:	20 91 90 01 	lds	r18, 0x0190
    175e:	30 91 91 01 	lds	r19, 0x0191
    1762:	40 91 92 01 	lds	r20, 0x0192
    1766:	50 91 93 01 	lds	r21, 0x0193
    176a:	bc 01       	movw	r22, r24
    176c:	cd 01       	movw	r24, r26
    176e:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1772:	dc 01       	movw	r26, r24
    1774:	cb 01       	movw	r24, r22
    1776:	9c 01       	movw	r18, r24
    1778:	ad 01       	movw	r20, r26
    177a:	c8 01       	movw	r24, r16
    177c:	b7 01       	movw	r22, r14
    177e:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    1782:	88 23       	and	r24, r24
    1784:	0c f4       	brge	.+2      	; 0x1788 <main+0x63e>
    1786:	4e c0       	rjmp	.+156    	; 0x1824 <main+0x6da>
    1788:	80 91 98 01 	lds	r24, 0x0198
    178c:	90 91 99 01 	lds	r25, 0x0199
    1790:	a0 91 9a 01 	lds	r26, 0x019A
    1794:	b0 91 9b 01 	lds	r27, 0x019B
    1798:	bc 01       	movw	r22, r24
    179a:	cd 01       	movw	r24, r26
    179c:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    17a0:	7b 01       	movw	r14, r22
    17a2:	8c 01       	movw	r16, r24
    17a4:	80 91 68 01 	lds	r24, 0x0168
    17a8:	90 91 69 01 	lds	r25, 0x0169
    17ac:	a0 91 6a 01 	lds	r26, 0x016A
    17b0:	b0 91 6b 01 	lds	r27, 0x016B
    17b4:	bc 01       	movw	r22, r24
    17b6:	cd 01       	movw	r24, r26
    17b8:	20 e0       	ldi	r18, 0x00	; 0
    17ba:	30 e0       	ldi	r19, 0x00	; 0
    17bc:	40 ec       	ldi	r20, 0xC0	; 192
    17be:	50 e4       	ldi	r21, 0x40	; 64
    17c0:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    17c4:	dc 01       	movw	r26, r24
    17c6:	cb 01       	movw	r24, r22
    17c8:	bc 01       	movw	r22, r24
    17ca:	cd 01       	movw	r24, r26
    17cc:	20 e0       	ldi	r18, 0x00	; 0
    17ce:	30 e0       	ldi	r19, 0x00	; 0
    17d0:	40 e8       	ldi	r20, 0x80	; 128
    17d2:	5f e3       	ldi	r21, 0x3F	; 63
    17d4:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    17d8:	dc 01       	movw	r26, r24
    17da:	cb 01       	movw	r24, r22
    17dc:	20 91 90 01 	lds	r18, 0x0190
    17e0:	30 91 91 01 	lds	r19, 0x0191
    17e4:	40 91 92 01 	lds	r20, 0x0192
    17e8:	50 91 93 01 	lds	r21, 0x0193
    17ec:	bc 01       	movw	r22, r24
    17ee:	cd 01       	movw	r24, r26
    17f0:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    17f4:	dc 01       	movw	r26, r24
    17f6:	cb 01       	movw	r24, r22
    17f8:	9c 01       	movw	r18, r24
    17fa:	ad 01       	movw	r20, r26
    17fc:	c8 01       	movw	r24, r16
    17fe:	b7 01       	movw	r22, r14
    1800:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__ltsf2>
    1804:	88 23       	and	r24, r24
    1806:	74 f4       	brge	.+28     	; 0x1824 <main+0x6da>
	   {
//	     PORTB |= 0b00011111; //8, 9, 10, 11 and 12 as HIGH
//	     PORTD |= 0b11000000; //2 (blue), 5, 6 and 7 as HIGH
		  PORTB |= 0xEF;
    1808:	a8 e3       	ldi	r26, 0x38	; 56
    180a:	b0 e0       	ldi	r27, 0x00	; 0
    180c:	e8 e3       	ldi	r30, 0x38	; 56
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	80 81       	ld	r24, Z
    1812:	8f 6e       	ori	r24, 0xEF	; 239
    1814:	8c 93       	st	X, r24
		  PORTA |= 0b00000100;
    1816:	ab e3       	ldi	r26, 0x3B	; 59
    1818:	b0 e0       	ldi	r27, 0x00	; 0
    181a:	eb e3       	ldi	r30, 0x3B	; 59
    181c:	f0 e0       	ldi	r31, 0x00	; 0
    181e:	80 81       	ld	r24, Z
    1820:	84 60       	ori	r24, 0x04	; 4
    1822:	8c 93       	st	X, r24
	   }

	   if(elapsed_loop_counter >= time_per_deg*((MIN*6)+1))
    1824:	80 91 98 01 	lds	r24, 0x0198
    1828:	90 91 99 01 	lds	r25, 0x0199
    182c:	a0 91 9a 01 	lds	r26, 0x019A
    1830:	b0 91 9b 01 	lds	r27, 0x019B
    1834:	bc 01       	movw	r22, r24
    1836:	cd 01       	movw	r24, r26
    1838:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    183c:	7b 01       	movw	r14, r22
    183e:	8c 01       	movw	r16, r24
    1840:	80 91 68 01 	lds	r24, 0x0168
    1844:	90 91 69 01 	lds	r25, 0x0169
    1848:	a0 91 6a 01 	lds	r26, 0x016A
    184c:	b0 91 6b 01 	lds	r27, 0x016B
    1850:	bc 01       	movw	r22, r24
    1852:	cd 01       	movw	r24, r26
    1854:	20 e0       	ldi	r18, 0x00	; 0
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	40 ec       	ldi	r20, 0xC0	; 192
    185a:	50 e4       	ldi	r21, 0x40	; 64
    185c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1860:	dc 01       	movw	r26, r24
    1862:	cb 01       	movw	r24, r22
    1864:	bc 01       	movw	r22, r24
    1866:	cd 01       	movw	r24, r26
    1868:	20 e0       	ldi	r18, 0x00	; 0
    186a:	30 e0       	ldi	r19, 0x00	; 0
    186c:	40 e8       	ldi	r20, 0x80	; 128
    186e:	5f e3       	ldi	r21, 0x3F	; 63
    1870:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    1874:	dc 01       	movw	r26, r24
    1876:	cb 01       	movw	r24, r22
    1878:	20 91 90 01 	lds	r18, 0x0190
    187c:	30 91 91 01 	lds	r19, 0x0191
    1880:	40 91 92 01 	lds	r20, 0x0192
    1884:	50 91 93 01 	lds	r21, 0x0193
    1888:	bc 01       	movw	r22, r24
    188a:	cd 01       	movw	r24, r26
    188c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1890:	dc 01       	movw	r26, r24
    1892:	cb 01       	movw	r24, r22
    1894:	9c 01       	movw	r18, r24
    1896:	ad 01       	movw	r20, r26
    1898:	c8 01       	movw	r24, r16
    189a:	b7 01       	movw	r22, r14
    189c:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    18a0:	88 23       	and	r24, r24
    18a2:	6c f0       	brlt	.+26     	; 0x18be <main+0x774>
	   {
//	     PORTB &= 0b11110000;
//	     PORTD &= 0b00111111;
			  PORTB &= 0x00;
    18a4:	e8 e3       	ldi	r30, 0x38	; 56
    18a6:	f0 e0       	ldi	r31, 0x00	; 0
    18a8:	10 81       	ld	r17, Z
    18aa:	e8 e3       	ldi	r30, 0x38	; 56
    18ac:	f0 e0       	ldi	r31, 0x00	; 0
    18ae:	10 82       	st	Z, r1
			  PORTA &= 0b11111100;
    18b0:	ab e3       	ldi	r26, 0x3B	; 59
    18b2:	b0 e0       	ldi	r27, 0x00	; 0
    18b4:	eb e3       	ldi	r30, 0x3B	; 59
    18b6:	f0 e0       	ldi	r31, 0x00	; 0
    18b8:	80 81       	ld	r24, Z
    18ba:	8c 7f       	andi	r24, 0xFC	; 252
    18bc:	8c 93       	st	X, r24
	   }



	    //Print the hour line
	   if(elapsed_loop_counter >=  time_per_deg*(HOUR*30) &&  elapsed_loop_counter <  time_per_deg*(   (HOUR*30)  +1)   )
    18be:	80 91 98 01 	lds	r24, 0x0198
    18c2:	90 91 99 01 	lds	r25, 0x0199
    18c6:	a0 91 9a 01 	lds	r26, 0x019A
    18ca:	b0 91 9b 01 	lds	r27, 0x019B
    18ce:	bc 01       	movw	r22, r24
    18d0:	cd 01       	movw	r24, r26
    18d2:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    18d6:	7b 01       	movw	r14, r22
    18d8:	8c 01       	movw	r16, r24
    18da:	80 91 6c 01 	lds	r24, 0x016C
    18de:	90 91 6d 01 	lds	r25, 0x016D
    18e2:	a0 91 6e 01 	lds	r26, 0x016E
    18e6:	b0 91 6f 01 	lds	r27, 0x016F
    18ea:	bc 01       	movw	r22, r24
    18ec:	cd 01       	movw	r24, r26
    18ee:	20 e0       	ldi	r18, 0x00	; 0
    18f0:	30 e0       	ldi	r19, 0x00	; 0
    18f2:	40 ef       	ldi	r20, 0xF0	; 240
    18f4:	51 e4       	ldi	r21, 0x41	; 65
    18f6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    18fa:	dc 01       	movw	r26, r24
    18fc:	cb 01       	movw	r24, r22
    18fe:	20 91 90 01 	lds	r18, 0x0190
    1902:	30 91 91 01 	lds	r19, 0x0191
    1906:	40 91 92 01 	lds	r20, 0x0192
    190a:	50 91 93 01 	lds	r21, 0x0193
    190e:	bc 01       	movw	r22, r24
    1910:	cd 01       	movw	r24, r26
    1912:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1916:	dc 01       	movw	r26, r24
    1918:	cb 01       	movw	r24, r22
    191a:	9c 01       	movw	r18, r24
    191c:	ad 01       	movw	r20, r26
    191e:	c8 01       	movw	r24, r16
    1920:	b7 01       	movw	r22, r14
    1922:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    1926:	88 23       	and	r24, r24
    1928:	0c f4       	brge	.+2      	; 0x192c <main+0x7e2>
    192a:	4e c0       	rjmp	.+156    	; 0x19c8 <main+0x87e>
    192c:	80 91 98 01 	lds	r24, 0x0198
    1930:	90 91 99 01 	lds	r25, 0x0199
    1934:	a0 91 9a 01 	lds	r26, 0x019A
    1938:	b0 91 9b 01 	lds	r27, 0x019B
    193c:	bc 01       	movw	r22, r24
    193e:	cd 01       	movw	r24, r26
    1940:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    1944:	7b 01       	movw	r14, r22
    1946:	8c 01       	movw	r16, r24
    1948:	80 91 6c 01 	lds	r24, 0x016C
    194c:	90 91 6d 01 	lds	r25, 0x016D
    1950:	a0 91 6e 01 	lds	r26, 0x016E
    1954:	b0 91 6f 01 	lds	r27, 0x016F
    1958:	bc 01       	movw	r22, r24
    195a:	cd 01       	movw	r24, r26
    195c:	20 e0       	ldi	r18, 0x00	; 0
    195e:	30 e0       	ldi	r19, 0x00	; 0
    1960:	40 ef       	ldi	r20, 0xF0	; 240
    1962:	51 e4       	ldi	r21, 0x41	; 65
    1964:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1968:	dc 01       	movw	r26, r24
    196a:	cb 01       	movw	r24, r22
    196c:	bc 01       	movw	r22, r24
    196e:	cd 01       	movw	r24, r26
    1970:	20 e0       	ldi	r18, 0x00	; 0
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	40 e8       	ldi	r20, 0x80	; 128
    1976:	5f e3       	ldi	r21, 0x3F	; 63
    1978:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    197c:	dc 01       	movw	r26, r24
    197e:	cb 01       	movw	r24, r22
    1980:	20 91 90 01 	lds	r18, 0x0190
    1984:	30 91 91 01 	lds	r19, 0x0191
    1988:	40 91 92 01 	lds	r20, 0x0192
    198c:	50 91 93 01 	lds	r21, 0x0193
    1990:	bc 01       	movw	r22, r24
    1992:	cd 01       	movw	r24, r26
    1994:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1998:	dc 01       	movw	r26, r24
    199a:	cb 01       	movw	r24, r22
    199c:	9c 01       	movw	r18, r24
    199e:	ad 01       	movw	r20, r26
    19a0:	c8 01       	movw	r24, r16
    19a2:	b7 01       	movw	r22, r14
    19a4:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__ltsf2>
    19a8:	88 23       	and	r24, r24
    19aa:	74 f4       	brge	.+28     	; 0x19c8 <main+0x87e>
	   {
//	     PORTB |= 0b00011111; //8, 9, 10, 11 and 12 as HIGH
//	     PORTD |= 0b00000000; //2 (blue), 5, 6 and 7 as HIGH
		  PORTB |= 0xFF;
    19ac:	e8 e3       	ldi	r30, 0x38	; 56
    19ae:	f0 e0       	ldi	r31, 0x00	; 0
    19b0:	20 81       	ld	r18, Z
    19b2:	e8 e3       	ldi	r30, 0x38	; 56
    19b4:	f0 e0       	ldi	r31, 0x00	; 0
    19b6:	8f ef       	ldi	r24, 0xFF	; 255
    19b8:	80 83       	st	Z, r24
		  PORTA |= 0b00000100;
    19ba:	ab e3       	ldi	r26, 0x3B	; 59
    19bc:	b0 e0       	ldi	r27, 0x00	; 0
    19be:	eb e3       	ldi	r30, 0x3B	; 59
    19c0:	f0 e0       	ldi	r31, 0x00	; 0
    19c2:	80 81       	ld	r24, Z
    19c4:	84 60       	ori	r24, 0x04	; 4
    19c6:	8c 93       	st	X, r24
	   }

	   if(elapsed_loop_counter >= time_per_deg*(  (HOUR*30)   +1))
    19c8:	80 91 98 01 	lds	r24, 0x0198
    19cc:	90 91 99 01 	lds	r25, 0x0199
    19d0:	a0 91 9a 01 	lds	r26, 0x019A
    19d4:	b0 91 9b 01 	lds	r27, 0x019B
    19d8:	bc 01       	movw	r22, r24
    19da:	cd 01       	movw	r24, r26
    19dc:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    19e0:	7b 01       	movw	r14, r22
    19e2:	8c 01       	movw	r16, r24
    19e4:	80 91 6c 01 	lds	r24, 0x016C
    19e8:	90 91 6d 01 	lds	r25, 0x016D
    19ec:	a0 91 6e 01 	lds	r26, 0x016E
    19f0:	b0 91 6f 01 	lds	r27, 0x016F
    19f4:	bc 01       	movw	r22, r24
    19f6:	cd 01       	movw	r24, r26
    19f8:	20 e0       	ldi	r18, 0x00	; 0
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	40 ef       	ldi	r20, 0xF0	; 240
    19fe:	51 e4       	ldi	r21, 0x41	; 65
    1a00:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1a04:	dc 01       	movw	r26, r24
    1a06:	cb 01       	movw	r24, r22
    1a08:	bc 01       	movw	r22, r24
    1a0a:	cd 01       	movw	r24, r26
    1a0c:	20 e0       	ldi	r18, 0x00	; 0
    1a0e:	30 e0       	ldi	r19, 0x00	; 0
    1a10:	40 e8       	ldi	r20, 0x80	; 128
    1a12:	5f e3       	ldi	r21, 0x3F	; 63
    1a14:	0e 94 c6 01 	call	0x38c	; 0x38c <__addsf3>
    1a18:	dc 01       	movw	r26, r24
    1a1a:	cb 01       	movw	r24, r22
    1a1c:	20 91 90 01 	lds	r18, 0x0190
    1a20:	30 91 91 01 	lds	r19, 0x0191
    1a24:	40 91 92 01 	lds	r20, 0x0192
    1a28:	50 91 93 01 	lds	r21, 0x0193
    1a2c:	bc 01       	movw	r22, r24
    1a2e:	cd 01       	movw	r24, r26
    1a30:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <__mulsf3>
    1a34:	dc 01       	movw	r26, r24
    1a36:	cb 01       	movw	r24, r22
    1a38:	9c 01       	movw	r18, r24
    1a3a:	ad 01       	movw	r20, r26
    1a3c:	c8 01       	movw	r24, r16
    1a3e:	b7 01       	movw	r22, r14
    1a40:	0e 94 c9 03 	call	0x792	; 0x792 <__gesf2>
    1a44:	88 23       	and	r24, r24
    1a46:	0c f4       	brge	.+2      	; 0x1a4a <main+0x900>
    1a48:	bf cb       	rjmp	.-2178   	; 0x11c8 <main+0x7e>
	   {
//	     PORTB &= 0b11100000;
//	     PORTD &= 0b11111111;
		  PORTB &= 0x00;
    1a4a:	e8 e3       	ldi	r30, 0x38	; 56
    1a4c:	f0 e0       	ldi	r31, 0x00	; 0
    1a4e:	80 81       	ld	r24, Z
    1a50:	e8 e3       	ldi	r30, 0x38	; 56
    1a52:	f0 e0       	ldi	r31, 0x00	; 0
    1a54:	10 82       	st	Z, r1
		  PORTB |= 0xF0;
    1a56:	a8 e3       	ldi	r26, 0x38	; 56
    1a58:	b0 e0       	ldi	r27, 0x00	; 0
    1a5a:	e8 e3       	ldi	r30, 0x38	; 56
    1a5c:	f0 e0       	ldi	r31, 0x00	; 0
    1a5e:	80 81       	ld	r24, Z
    1a60:	80 6f       	ori	r24, 0xF0	; 240
    1a62:	8c 93       	st	X, r24

		  PORTA &= 0b11111100;
    1a64:	ab e3       	ldi	r26, 0x3B	; 59
    1a66:	b0 e0       	ldi	r27, 0x00	; 0
    1a68:	eb e3       	ldi	r30, 0x3B	; 59
    1a6a:	f0 e0       	ldi	r31, 0x00	; 0
    1a6c:	80 81       	ld	r24, Z
    1a6e:	8c 7f       	andi	r24, 0xFC	; 252
    1a70:	8c 93       	st	X, r24
    1a72:	aa cb       	rjmp	.-2220   	; 0x11c8 <main+0x7e>

00001a74 <ISR>:
//{
//	PORTB |= 0xff;
//	PORTA |= 0x00;
//}

void ISR(void){
    1a74:	ef 92       	push	r14
    1a76:	ff 92       	push	r15
    1a78:	0f 93       	push	r16
    1a7a:	1f 93       	push	r17
    1a7c:	df 93       	push	r29
    1a7e:	cf 93       	push	r28
    1a80:	cd b7       	in	r28, 0x3d	; 61
    1a82:	de b7       	in	r29, 0x3e	; 62
//First we take the current count value in micro seconds using the micros() function

  current_count = micros();
    1a84:	0e 94 4c 08 	call	0x1098	; 0x1098 <micros>
    1a88:	dc 01       	movw	r26, r24
    1a8a:	cb 01       	movw	r24, r22
    1a8c:	80 93 94 01 	sts	0x0194, r24
    1a90:	90 93 95 01 	sts	0x0195, r25
    1a94:	a0 93 96 01 	sts	0x0196, r26
    1a98:	b0 93 97 01 	sts	0x0197, r27
  ///////////////////////////////////////
  if(PIND & 0b00000100){                              //We make an AND with the pin state register, We verify if pin 13 is HIGH???
    1a9c:	e0 e3       	ldi	r30, 0x30	; 48
    1a9e:	f0 e0       	ldi	r31, 0x00	; 0
    1aa0:	80 81       	ld	r24, Z
    1aa2:	88 2f       	mov	r24, r24
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	84 70       	andi	r24, 0x04	; 4
    1aa8:	90 70       	andi	r25, 0x00	; 0
    1aaa:	00 97       	sbiw	r24, 0x00	; 0
    1aac:	c9 f0       	breq	.+50     	; 0x1ae0 <ISR+0x6c>
    if(last_IN_state == 0){                          //If the last state was 0, then we have a state change...
    1aae:	80 91 8b 01 	lds	r24, 0x018B
    1ab2:	88 23       	and	r24, r24
    1ab4:	09 f0       	breq	.+2      	; 0x1ab8 <ISR+0x44>
    1ab6:	67 c0       	rjmp	.+206    	; 0x1b86 <ISR+0x112>
      last_IN_state = 1;                             //Store the current state into the last state for the next loop
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	80 93 8b 01 	sts	0x018B, r24
      counter_1 = current_count;                     //Set counter_1 to current value.
    1abe:	80 91 94 01 	lds	r24, 0x0194
    1ac2:	90 91 95 01 	lds	r25, 0x0195
    1ac6:	a0 91 96 01 	lds	r26, 0x0196
    1aca:	b0 91 97 01 	lds	r27, 0x0197
    1ace:	80 93 a0 01 	sts	0x01A0, r24
    1ad2:	90 93 a1 01 	sts	0x01A1, r25
    1ad6:	a0 93 a2 01 	sts	0x01A2, r26
    1ada:	b0 93 a3 01 	sts	0x01A3, r27
    1ade:	53 c0       	rjmp	.+166    	; 0x1b86 <ISR+0x112>
    }
  }
  else if(last_IN_state == 1){                       //If pin 13 is LOW and the last state was HIGH then we have a state change
    1ae0:	80 91 8b 01 	lds	r24, 0x018B
    1ae4:	81 30       	cpi	r24, 0x01	; 1
    1ae6:	09 f0       	breq	.+2      	; 0x1aea <ISR+0x76>
    1ae8:	4e c0       	rjmp	.+156    	; 0x1b86 <ISR+0x112>
    last_IN_state = 0;                               //Store the current state into the last state for the next loop
    1aea:	10 92 8b 01 	sts	0x018B, r1
    one_rot_time = current_count - counter_1;        //We make the time difference. one_rot_time 1 is current_count - counter_1.
    1aee:	20 91 94 01 	lds	r18, 0x0194
    1af2:	30 91 95 01 	lds	r19, 0x0195
    1af6:	40 91 96 01 	lds	r20, 0x0196
    1afa:	50 91 97 01 	lds	r21, 0x0197
    1afe:	80 91 a0 01 	lds	r24, 0x01A0
    1b02:	90 91 a1 01 	lds	r25, 0x01A1
    1b06:	a0 91 a2 01 	lds	r26, 0x01A2
    1b0a:	b0 91 a3 01 	lds	r27, 0x01A3
    1b0e:	79 01       	movw	r14, r18
    1b10:	8a 01       	movw	r16, r20
    1b12:	e8 1a       	sub	r14, r24
    1b14:	f9 0a       	sbc	r15, r25
    1b16:	0a 0b       	sbc	r16, r26
    1b18:	1b 0b       	sbc	r17, r27
    1b1a:	d8 01       	movw	r26, r16
    1b1c:	c7 01       	movw	r24, r14
    1b1e:	bc 01       	movw	r22, r24
    1b20:	cd 01       	movw	r24, r26
    1b22:	0e 94 29 04 	call	0x852	; 0x852 <__floatunsisf>
    1b26:	dc 01       	movw	r26, r24
    1b28:	cb 01       	movw	r24, r22
    1b2a:	80 93 8c 01 	sts	0x018C, r24
    1b2e:	90 93 8d 01 	sts	0x018D, r25
    1b32:	a0 93 8e 01 	sts	0x018E, r26
    1b36:	b0 93 8f 01 	sts	0x018F, r27
    time_per_deg = one_rot_time/360.0;
    1b3a:	80 91 8c 01 	lds	r24, 0x018C
    1b3e:	90 91 8d 01 	lds	r25, 0x018D
    1b42:	a0 91 8e 01 	lds	r26, 0x018E
    1b46:	b0 91 8f 01 	lds	r27, 0x018F
    1b4a:	bc 01       	movw	r22, r24
    1b4c:	cd 01       	movw	r24, r26
    1b4e:	20 e0       	ldi	r18, 0x00	; 0
    1b50:	30 e0       	ldi	r19, 0x00	; 0
    1b52:	44 eb       	ldi	r20, 0xB4	; 180
    1b54:	53 e4       	ldi	r21, 0x43	; 67
    1b56:	0e 94 ed 02 	call	0x5da	; 0x5da <__divsf3>
    1b5a:	dc 01       	movw	r26, r24
    1b5c:	cb 01       	movw	r24, r22
    1b5e:	80 93 90 01 	sts	0x0190, r24
    1b62:	90 93 91 01 	sts	0x0191, r25
    1b66:	a0 93 92 01 	sts	0x0192, r26
    1b6a:	b0 93 93 01 	sts	0x0193, r27
    previousMillis = micros();
    1b6e:	0e 94 4c 08 	call	0x1098	; 0x1098 <micros>
    1b72:	dc 01       	movw	r26, r24
    1b74:	cb 01       	movw	r24, r22
    1b76:	80 93 a4 01 	sts	0x01A4, r24
    1b7a:	90 93 a5 01 	sts	0x01A5, r25
    1b7e:	a0 93 a6 01 	sts	0x01A6, r26
    1b82:	b0 93 a7 01 	sts	0x01A7, r27

   }
}
    1b86:	cf 91       	pop	r28
    1b88:	df 91       	pop	r29
    1b8a:	1f 91       	pop	r17
    1b8c:	0f 91       	pop	r16
    1b8e:	ff 90       	pop	r15
    1b90:	ef 90       	pop	r14
    1b92:	08 95       	ret

00001b94 <__prologue_saves__>:
    1b94:	2f 92       	push	r2
    1b96:	3f 92       	push	r3
    1b98:	4f 92       	push	r4
    1b9a:	5f 92       	push	r5
    1b9c:	6f 92       	push	r6
    1b9e:	7f 92       	push	r7
    1ba0:	8f 92       	push	r8
    1ba2:	9f 92       	push	r9
    1ba4:	af 92       	push	r10
    1ba6:	bf 92       	push	r11
    1ba8:	cf 92       	push	r12
    1baa:	df 92       	push	r13
    1bac:	ef 92       	push	r14
    1bae:	ff 92       	push	r15
    1bb0:	0f 93       	push	r16
    1bb2:	1f 93       	push	r17
    1bb4:	cf 93       	push	r28
    1bb6:	df 93       	push	r29
    1bb8:	cd b7       	in	r28, 0x3d	; 61
    1bba:	de b7       	in	r29, 0x3e	; 62
    1bbc:	ca 1b       	sub	r28, r26
    1bbe:	db 0b       	sbc	r29, r27
    1bc0:	0f b6       	in	r0, 0x3f	; 63
    1bc2:	f8 94       	cli
    1bc4:	de bf       	out	0x3e, r29	; 62
    1bc6:	0f be       	out	0x3f, r0	; 63
    1bc8:	cd bf       	out	0x3d, r28	; 61
    1bca:	09 94       	ijmp

00001bcc <__epilogue_restores__>:
    1bcc:	2a 88       	ldd	r2, Y+18	; 0x12
    1bce:	39 88       	ldd	r3, Y+17	; 0x11
    1bd0:	48 88       	ldd	r4, Y+16	; 0x10
    1bd2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bd4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bd6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bd8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bda:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bdc:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bde:	b9 84       	ldd	r11, Y+9	; 0x09
    1be0:	c8 84       	ldd	r12, Y+8	; 0x08
    1be2:	df 80       	ldd	r13, Y+7	; 0x07
    1be4:	ee 80       	ldd	r14, Y+6	; 0x06
    1be6:	fd 80       	ldd	r15, Y+5	; 0x05
    1be8:	0c 81       	ldd	r16, Y+4	; 0x04
    1bea:	1b 81       	ldd	r17, Y+3	; 0x03
    1bec:	aa 81       	ldd	r26, Y+2	; 0x02
    1bee:	b9 81       	ldd	r27, Y+1	; 0x01
    1bf0:	ce 0f       	add	r28, r30
    1bf2:	d1 1d       	adc	r29, r1
    1bf4:	0f b6       	in	r0, 0x3f	; 63
    1bf6:	f8 94       	cli
    1bf8:	de bf       	out	0x3e, r29	; 62
    1bfa:	0f be       	out	0x3f, r0	; 63
    1bfc:	cd bf       	out	0x3d, r28	; 61
    1bfe:	ed 01       	movw	r28, r26
    1c00:	08 95       	ret

00001c02 <_exit>:
    1c02:	f8 94       	cli

00001c04 <__stop_program>:
    1c04:	ff cf       	rjmp	.-2      	; 0x1c04 <__stop_program>
